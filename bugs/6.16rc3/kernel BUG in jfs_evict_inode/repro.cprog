// autogenerated by syzkaller (https://github.com/google/syzkaller)

#define _GNU_SOURCE 

#include <dirent.h>
#include <endian.h>
#include <errno.h>
#include <fcntl.h>
#include <pthread.h>
#include <sched.h>
#include <setjmp.h>
#include <signal.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/ioctl.h>
#include <sys/mman.h>
#include <sys/mount.h>
#include <sys/prctl.h>
#include <sys/resource.h>
#include <sys/stat.h>
#include <sys/syscall.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <time.h>
#include <unistd.h>

#include <linux/capability.h>
#include <linux/futex.h>
#include <linux/loop.h>
#include <linux/sched.h>

#ifndef __NR_clone3
#define __NR_clone3 435
#endif
#ifndef __NR_memfd_create
#define __NR_memfd_create 319
#endif

static unsigned long long procid;

static void sleep_ms(uint64_t ms)
{
	usleep(ms * 1000);
}

static uint64_t current_time_ms(void)
{
	struct timespec ts;
	if (clock_gettime(CLOCK_MONOTONIC, &ts))
	exit(1);
	return (uint64_t)ts.tv_sec * 1000 + (uint64_t)ts.tv_nsec / 1000000;
}

static void use_temporary_dir(void)
{
	char tmpdir_template[] = "./syzkaller.XXXXXX";
	char* tmpdir = mkdtemp(tmpdir_template);
	if (!tmpdir)
	exit(1);
	if (chmod(tmpdir, 0777))
	exit(1);
	if (chdir(tmpdir))
	exit(1);
}

static void thread_start(void* (*fn)(void*), void* arg)
{
	pthread_t th;
	pthread_attr_t attr;
	pthread_attr_init(&attr);
	pthread_attr_setstacksize(&attr, 128 << 10);
	int i = 0;
	for (; i < 100; i++) {
		if (pthread_create(&th, &attr, fn, arg) == 0) {
			pthread_attr_destroy(&attr);
			return;
		}
		if (errno == EAGAIN) {
			usleep(50);
			continue;
		}
		break;
	}
	exit(1);
}

typedef struct {
	int state;
} event_t;

static void event_init(event_t* ev)
{
	ev->state = 0;
}

static void event_reset(event_t* ev)
{
	ev->state = 0;
}

static void event_set(event_t* ev)
{
	if (ev->state)
	exit(1);
	__atomic_store_n(&ev->state, 1, __ATOMIC_RELEASE);
	syscall(SYS_futex, &ev->state, FUTEX_WAKE | FUTEX_PRIVATE_FLAG, 1000000);
}

static void event_wait(event_t* ev)
{
	while (!__atomic_load_n(&ev->state, __ATOMIC_ACQUIRE))
		syscall(SYS_futex, &ev->state, FUTEX_WAIT | FUTEX_PRIVATE_FLAG, 0, 0);
}

static int event_isset(event_t* ev)
{
	return __atomic_load_n(&ev->state, __ATOMIC_ACQUIRE);
}

static int event_timedwait(event_t* ev, uint64_t timeout)
{
	uint64_t start = current_time_ms();
	uint64_t now = start;
	for (;;) {
		uint64_t remain = timeout - (now - start);
		struct timespec ts;
		ts.tv_sec = remain / 1000;
		ts.tv_nsec = (remain % 1000) * 1000 * 1000;
		syscall(SYS_futex, &ev->state, FUTEX_WAIT | FUTEX_PRIVATE_FLAG, 0, &ts);
		if (__atomic_load_n(&ev->state, __ATOMIC_ACQUIRE))
			return 1;
		now = current_time_ms();
		if (now - start > timeout)
			return 0;
	}
}

static bool write_file(const char* file, const char* what, ...)
{
	char buf[1024];
	va_list args;
	va_start(args, what);
	vsnprintf(buf, sizeof(buf), what, args);
	va_end(args);
	buf[sizeof(buf) - 1] = 0;
	int len = strlen(buf);
	int fd = open(file, O_WRONLY | O_CLOEXEC);
	if (fd == -1)
		return false;
	if (write(fd, buf, len) != len) {
		int err = errno;
		close(fd);
		errno = err;
		return false;
	}
	close(fd);
	return true;
}

#define MAX_FDS 30

//% This code is derived from puff.{c,h}, found in the zlib development. The
//% original files come with the following copyright notice:

//% Copyright (C) 2002-2013 Mark Adler, all rights reserved
//% version 2.3, 21 Jan 2013
//% This software is provided 'as-is', without any express or implied
//% warranty.  In no event will the author be held liable for any damages
//% arising from the use of this software.
//% Permission is granted to anyone to use this software for any purpose,
//% including commercial applications, and to alter it and redistribute it
//% freely, subject to the following restrictions:
//% 1. The origin of this software must not be misrepresented; you must not
//%    claim that you wrote the original software. If you use this software
//%    in a product, an acknowledgment in the product documentation would be
//%    appreciated but is not required.
//% 2. Altered source versions must be plainly marked as such, and must not be
//%    misrepresented as being the original software.
//% 3. This notice may not be removed or altered from any source distribution.
//% Mark Adler    madler@alumni.caltech.edu

//% BEGIN CODE DERIVED FROM puff.{c,h}

#define MAXBITS 15
#define MAXLCODES 286
#define MAXDCODES 30
#define MAXCODES (MAXLCODES + MAXDCODES)
#define FIXLCODES 288

struct puff_state {
	unsigned char* out;
	unsigned long outlen;
	unsigned long outcnt;
	const unsigned char* in;
	unsigned long inlen;
	unsigned long incnt;
	int bitbuf;
	int bitcnt;
	jmp_buf env;
};
static int puff_bits(struct puff_state* s, int need)
{
	long val = s->bitbuf;
	while (s->bitcnt < need) {
		if (s->incnt == s->inlen)
			longjmp(s->env, 1);
		val |= (long)(s->in[s->incnt++]) << s->bitcnt;
		s->bitcnt += 8;
	}
	s->bitbuf = (int)(val >> need);
	s->bitcnt -= need;
	return (int)(val & ((1L << need) - 1));
}
static int puff_stored(struct puff_state* s)
{
	s->bitbuf = 0;
	s->bitcnt = 0;
	if (s->incnt + 4 > s->inlen)
		return 2;
	unsigned len = s->in[s->incnt++];
	len |= s->in[s->incnt++] << 8;
	if (s->in[s->incnt++] != (~len & 0xff) ||
	    s->in[s->incnt++] != ((~len >> 8) & 0xff))
		return -2;
	if (s->incnt + len > s->inlen)
		return 2;
	if (s->outcnt + len > s->outlen)
		return 1;
	for (; len--; s->outcnt++, s->incnt++) {
		if (s->in[s->incnt])
			s->out[s->outcnt] = s->in[s->incnt];
	}
	return 0;
}
struct puff_huffman {
	short* count;
	short* symbol;
};
static int puff_decode(struct puff_state* s, const struct puff_huffman* h)
{
	int first = 0;
	int index = 0;
	int bitbuf = s->bitbuf;
	int left = s->bitcnt;
	int code = first = index = 0;
	int len = 1;
	short* next = h->count + 1;
	while (1) {
		while (left--) {
			code |= bitbuf & 1;
			bitbuf >>= 1;
			int count = *next++;
			if (code - count < first) {
				s->bitbuf = bitbuf;
				s->bitcnt = (s->bitcnt - len) & 7;
				return h->symbol[index + (code - first)];
			}
			index += count;
			first += count;
			first <<= 1;
			code <<= 1;
			len++;
		}
		left = (MAXBITS + 1) - len;
		if (left == 0)
			break;
		if (s->incnt == s->inlen)
			longjmp(s->env, 1);
		bitbuf = s->in[s->incnt++];
		if (left > 8)
			left = 8;
	}
	return -10;
}
static int puff_construct(struct puff_huffman* h, const short* length, int n)
{
	int len;
	for (len = 0; len <= MAXBITS; len++)
		h->count[len] = 0;
	int symbol;
	for (symbol = 0; symbol < n; symbol++)
		(h->count[length[symbol]])++;
	if (h->count[0] == n)
		return 0;
	int left = 1;
	for (len = 1; len <= MAXBITS; len++) {
		left <<= 1;
		left -= h->count[len];
		if (left < 0)
			return left;
	}
	short offs[MAXBITS + 1];
	offs[1] = 0;
	for (len = 1; len < MAXBITS; len++)
		offs[len + 1] = offs[len] + h->count[len];
	for (symbol = 0; symbol < n; symbol++)
		if (length[symbol] != 0)
			h->symbol[offs[length[symbol]]++] = symbol;
	return left;
}
static int puff_codes(struct puff_state* s,
		      const struct puff_huffman* lencode,
		      const struct puff_huffman* distcode)
{
	static const short lens[29] = {
				       3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
				       35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258};
	static const short lext[29] = {
				       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,
				       3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0};
	static const short dists[30] = {
					1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
					257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
					8193, 12289, 16385, 24577};
	static const short dext[30] = {
				       0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,
				       7, 7, 8, 8, 9, 9, 10, 10, 11, 11,
				       12, 12, 13, 13};
	int symbol;
	do {
		symbol = puff_decode(s, lencode);
		if (symbol < 0)
			return symbol;
		if (symbol < 256) {
			if (s->outcnt == s->outlen)
				return 1;
			if (symbol)
				s->out[s->outcnt] = symbol;
			s->outcnt++;
		} else if (symbol > 256) {
			symbol -= 257;
			if (symbol >= 29)
				return -10;
			int len = lens[symbol] + puff_bits(s, lext[symbol]);
			symbol = puff_decode(s, distcode);
			if (symbol < 0)
				return symbol;
			unsigned dist = dists[symbol] + puff_bits(s, dext[symbol]);
			if (dist > s->outcnt)
				return -11;
			if (s->outcnt + len > s->outlen)
				return 1;
			while (len--) {
				if (dist <= s->outcnt && s->out[s->outcnt - dist])
					s->out[s->outcnt] = s->out[s->outcnt - dist];
				s->outcnt++;
			}
		}
	} while (symbol != 256);
	return 0;
}
static int puff_fixed(struct puff_state* s)
{
	static int virgin = 1;
	static short lencnt[MAXBITS + 1], lensym[FIXLCODES];
	static short distcnt[MAXBITS + 1], distsym[MAXDCODES];
	static struct puff_huffman lencode, distcode;
	if (virgin) {
		lencode.count = lencnt;
		lencode.symbol = lensym;
		distcode.count = distcnt;
		distcode.symbol = distsym;
		short lengths[FIXLCODES];
		int symbol;
		for (symbol = 0; symbol < 144; symbol++)
			lengths[symbol] = 8;
		for (; symbol < 256; symbol++)
			lengths[symbol] = 9;
		for (; symbol < 280; symbol++)
			lengths[symbol] = 7;
		for (; symbol < FIXLCODES; symbol++)
			lengths[symbol] = 8;
		puff_construct(&lencode, lengths, FIXLCODES);
		for (symbol = 0; symbol < MAXDCODES; symbol++)
			lengths[symbol] = 5;
		puff_construct(&distcode, lengths, MAXDCODES);
		virgin = 0;
	}
	return puff_codes(s, &lencode, &distcode);
}
static int puff_dynamic(struct puff_state* s)
{
	static const short order[19] =
	    {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15};
	int nlen = puff_bits(s, 5) + 257;
	int ndist = puff_bits(s, 5) + 1;
	int ncode = puff_bits(s, 4) + 4;
	if (nlen > MAXLCODES || ndist > MAXDCODES)
		return -3;
	short lengths[MAXCODES];
	int index;
	for (index = 0; index < ncode; index++)
		lengths[order[index]] = puff_bits(s, 3);
	for (; index < 19; index++)
		lengths[order[index]] = 0;
	short lencnt[MAXBITS + 1], lensym[MAXLCODES];
	struct puff_huffman lencode = {lencnt, lensym};
	int err = puff_construct(&lencode, lengths, 19);
	if (err != 0)
		return -4;
	index = 0;
	while (index < nlen + ndist) {
		int symbol;
		int len;
		symbol = puff_decode(s, &lencode);
		if (symbol < 0)
			return symbol;
		if (symbol < 16)
			lengths[index++] = symbol;
		else {
			len = 0;
			if (symbol == 16) {
				if (index == 0)
					return -5;
				len = lengths[index - 1];
				symbol = 3 + puff_bits(s, 2);
			} else if (symbol == 17)
				symbol = 3 + puff_bits(s, 3);
			else
				symbol = 11 + puff_bits(s, 7);
			if (index + symbol > nlen + ndist)
				return -6;
			while (symbol--)
				lengths[index++] = len;
		}
	}
	if (lengths[256] == 0)
		return -9;
	err = puff_construct(&lencode, lengths, nlen);
	if (err && (err < 0 || nlen != lencode.count[0] + lencode.count[1]))
		return -7;
	short distcnt[MAXBITS + 1], distsym[MAXDCODES];
	struct puff_huffman distcode = {distcnt, distsym};
	err = puff_construct(&distcode, lengths + nlen, ndist);
	if (err && (err < 0 || ndist != distcode.count[0] + distcode.count[1]))
		return -8;
	return puff_codes(s, &lencode, &distcode);
}
static int puff(
    unsigned char* dest,
    unsigned long* destlen,
    const unsigned char* source,
    unsigned long sourcelen)
{
	struct puff_state s = {
	    .out = dest,
	    .outlen = *destlen,
	    .outcnt = 0,
	    .in = source,
	    .inlen = sourcelen,
	    .incnt = 0,
	    .bitbuf = 0,
	    .bitcnt = 0,
	};
	int err;
	if (setjmp(s.env) != 0)
		err = 2;
	else {
		int last;
		do {
			last = puff_bits(&s, 1);
			int type = puff_bits(&s, 2);
			err = type == 0 ? puff_stored(&s) : (type == 1 ? puff_fixed(&s) : (type == 2 ? puff_dynamic(&s) : -1));
			if (err != 0)
				break;
		} while (!last);
	}
	*destlen = s.outcnt;
	return err;
}

//% END CODE DERIVED FROM puff.{c,h}

#define ZLIB_HEADER_WIDTH 2

static int puff_zlib_to_file(const unsigned char* source, unsigned long sourcelen, int dest_fd)
{
	if (sourcelen < ZLIB_HEADER_WIDTH)
		return 0;
	source += ZLIB_HEADER_WIDTH;
	sourcelen -= ZLIB_HEADER_WIDTH;
	const unsigned long max_destlen = 132 << 20;
	void* ret = mmap(0, max_destlen, PROT_WRITE | PROT_READ, MAP_PRIVATE | MAP_ANON, -1, 0);
	if (ret == MAP_FAILED)
		return -1;
	unsigned char* dest = (unsigned char*)ret;
	unsigned long destlen = max_destlen;
	int err = puff(dest, &destlen, source, sourcelen);
	if (err) {
		munmap(dest, max_destlen);
		errno = -err;
		return -1;
	}
	if (write(dest_fd, dest, destlen) != (ssize_t)destlen) {
		munmap(dest, max_destlen);
		return -1;
	}
	return munmap(dest, max_destlen);
}

static int setup_loop_device(unsigned char* data, unsigned long size, const char* loopname, int* loopfd_p)
{
	int err = 0, loopfd = -1;
	int memfd = syscall(__NR_memfd_create, "syzkaller", 0);
	if (memfd == -1) {
		err = errno;
		goto error;
	}
	if (puff_zlib_to_file(data, size, memfd)) {
		err = errno;
		goto error_close_memfd;
	}
	loopfd = open(loopname, O_RDWR);
	if (loopfd == -1) {
		err = errno;
		goto error_close_memfd;
	}
	if (ioctl(loopfd, LOOP_SET_FD, memfd)) {
		if (errno != EBUSY) {
			err = errno;
			goto error_close_loop;
		}
		ioctl(loopfd, LOOP_CLR_FD, 0);
		usleep(1000);
		if (ioctl(loopfd, LOOP_SET_FD, memfd)) {
			err = errno;
			goto error_close_loop;
		}
	}
	close(memfd);
	*loopfd_p = loopfd;
	return 0;

error_close_loop:
	close(loopfd);
error_close_memfd:
	close(memfd);
error:
	errno = err;
	return -1;
}

static void reset_loop_device(const char* loopname)
{
	int loopfd = open(loopname, O_RDWR);
	if (loopfd == -1) {
		return;
	}
	if (ioctl(loopfd, LOOP_CLR_FD, 0)) {
	}
	close(loopfd);
}

static long syz_mount_image(
    volatile long fsarg,
    volatile long dir,
    volatile long flags,
    volatile long optsarg,
    volatile long change_dir,
    volatile unsigned long size,
    volatile long image)
{
	unsigned char* data = (unsigned char*)image;
	int res = -1, err = 0, need_loop_device = !!size;
	char* mount_opts = (char*)optsarg;
	char* target = (char*)dir;
	char* fs = (char*)fsarg;
	char* source = NULL;
	char loopname[64];
	if (need_loop_device) {
		int loopfd;
		memset(loopname, 0, sizeof(loopname));
		snprintf(loopname, sizeof(loopname), "/dev/loop%llu", procid);
		if (setup_loop_device(data, size, loopname, &loopfd) == -1)
			return -1;
		close(loopfd);
		source = loopname;
	}
	mkdir(target, 0777);
	char opts[256];
	memset(opts, 0, sizeof(opts));
	if (strlen(mount_opts) > (sizeof(opts) - 32)) {
	}
	strncpy(opts, mount_opts, sizeof(opts) - 32);
	if (strcmp(fs, "iso9660") == 0) {
		flags |= MS_RDONLY;
	} else if (strncmp(fs, "ext", 3) == 0) {
		bool has_remount_ro = false;
		char* remount_ro_start = strstr(opts, "errors=remount-ro");
		if (remount_ro_start != NULL) {
			char after = *(remount_ro_start + strlen("errors=remount-ro"));
			char before = remount_ro_start == opts ? '\0' : *(remount_ro_start - 1);
			has_remount_ro = ((before == '\0' || before == ',') && (after == '\0' || after == ','));
		}
		if (strstr(opts, "errors=panic") || !has_remount_ro)
			strcat(opts, ",errors=continue");
	} else if (strcmp(fs, "xfs") == 0) {
		strcat(opts, ",nouuid");
	}
	res = mount(source, target, fs, flags, opts);
	if (res == -1) {
		err = errno;
		goto error_clear_loop;
	}
	res = open(target, O_RDONLY | O_DIRECTORY);
	if (res == -1) {
		err = errno;
		goto error_clear_loop;
	}
	if (change_dir) {
		res = chdir(target);
		if (res == -1) {
			err = errno;
		}
	}

error_clear_loop:
	if (need_loop_device)
		reset_loop_device(loopname);
	errno = err;
	return res;
}

static void setup_gadgetfs();
static void setup_binderfs();
static void setup_fusectl();
static void sandbox_common_mount_tmpfs(void)
{
	write_file("/proc/sys/fs/mount-max", "100000");
	if (mkdir("./syz-tmp", 0777))
	exit(1);
	if (mount("", "./syz-tmp", "tmpfs", 0, NULL))
	exit(1);
	if (mkdir("./syz-tmp/newroot", 0777))
	exit(1);
	if (mkdir("./syz-tmp/newroot/dev", 0700))
	exit(1);
	unsigned bind_mount_flags = MS_BIND | MS_REC | MS_PRIVATE;
	if (mount("/dev", "./syz-tmp/newroot/dev", NULL, bind_mount_flags, NULL))
	exit(1);
	if (mkdir("./syz-tmp/newroot/proc", 0700))
	exit(1);
	if (mount("syz-proc", "./syz-tmp/newroot/proc", "proc", 0, NULL))
	exit(1);
	if (mkdir("./syz-tmp/newroot/selinux", 0700))
	exit(1);
	const char* selinux_path = "./syz-tmp/newroot/selinux";
	if (mount("/selinux", selinux_path, NULL, bind_mount_flags, NULL)) {
		if (errno != ENOENT)
	exit(1);
		if (mount("/sys/fs/selinux", selinux_path, NULL, bind_mount_flags, NULL) && errno != ENOENT)
	exit(1);
	}
	if (mkdir("./syz-tmp/newroot/sys", 0700))
	exit(1);
	if (mount("/sys", "./syz-tmp/newroot/sys", 0, bind_mount_flags, NULL))
	exit(1);
	if (mount("/sys/kernel/debug", "./syz-tmp/newroot/sys/kernel/debug", NULL, bind_mount_flags, NULL) && errno != ENOENT)
	exit(1);
	if (mount("/sys/fs/smackfs", "./syz-tmp/newroot/sys/fs/smackfs", NULL, bind_mount_flags, NULL) && errno != ENOENT)
	exit(1);
	if (mount("/proc/sys/fs/binfmt_misc", "./syz-tmp/newroot/proc/sys/fs/binfmt_misc", NULL, bind_mount_flags, NULL) && errno != ENOENT)
	exit(1);
	if (mkdir("./syz-tmp/newroot/syz-inputs", 0700))
	exit(1);
	if (mount("/syz-inputs", "./syz-tmp/newroot/syz-inputs", NULL, bind_mount_flags | MS_RDONLY, NULL) && errno != ENOENT)
	exit(1);
	if (mkdir("./syz-tmp/pivot", 0777))
	exit(1);
	if (syscall(SYS_pivot_root, "./syz-tmp", "./syz-tmp/pivot")) {
		if (chdir("./syz-tmp"))
	exit(1);
	} else {
		if (chdir("/"))
	exit(1);
		if (umount2("./pivot", MNT_DETACH))
	exit(1);
	}
	if (chroot("./newroot"))
	exit(1);
	if (chdir("/"))
	exit(1);
	setup_gadgetfs();
	setup_binderfs();
	setup_fusectl();
}

static void setup_gadgetfs()
{
	if (mkdir("/dev/gadgetfs", 0777)) {
	}
	if (mount("gadgetfs", "/dev/gadgetfs", "gadgetfs", 0, NULL)) {
	}
}

static void setup_fusectl()
{
	if (mount(0, "/sys/fs/fuse/connections", "fusectl", 0, 0)) {
	}
}

static void setup_binderfs()
{
	if (mkdir("/dev/binderfs", 0777)) {
	}
	if (mount("binder", "/dev/binderfs", "binder", 0, NULL)) {
	}
}

static void loop();

static void sandbox_common()
{
	prctl(PR_SET_PDEATHSIG, SIGKILL, 0, 0, 0);
	if (getppid() == 1)
	exit(1);
	struct rlimit rlim;
	rlim.rlim_cur = rlim.rlim_max = (200 << 20);
	setrlimit(RLIMIT_AS, &rlim);
	rlim.rlim_cur = rlim.rlim_max = 32 << 20;
	setrlimit(RLIMIT_MEMLOCK, &rlim);
	rlim.rlim_cur = rlim.rlim_max = 136 << 20;
	setrlimit(RLIMIT_FSIZE, &rlim);
	rlim.rlim_cur = rlim.rlim_max = 1 << 20;
	setrlimit(RLIMIT_STACK, &rlim);
	rlim.rlim_cur = rlim.rlim_max = 128 << 20;
	setrlimit(RLIMIT_CORE, &rlim);
	rlim.rlim_cur = rlim.rlim_max = 256;
	setrlimit(RLIMIT_NOFILE, &rlim);
	if (unshare(CLONE_NEWNS)) {
	}
	if (mount(NULL, "/", NULL, MS_REC | MS_PRIVATE, NULL)) {
	}
	if (unshare(CLONE_NEWIPC)) {
	}
	if (unshare(0x02000000)) {
	}
	if (unshare(CLONE_NEWUTS)) {
	}
	if (unshare(CLONE_SYSVSEM)) {
	}
	typedef struct {
		const char* name;
		const char* value;
	} sysctl_t;
	static const sysctl_t sysctls[] = {
	    {"/proc/sys/kernel/shmmax", "16777216"},
	    {"/proc/sys/kernel/shmall", "536870912"},
	    {"/proc/sys/kernel/shmmni", "1024"},
	    {"/proc/sys/kernel/msgmax", "8192"},
	    {"/proc/sys/kernel/msgmni", "1024"},
	    {"/proc/sys/kernel/msgmnb", "1024"},
	    {"/proc/sys/kernel/sem", "1024 1048576 500 1024"},
	};
	unsigned i;
	for (i = 0; i < sizeof(sysctls) / sizeof(sysctls[0]); i++)
		write_file(sysctls[i].name, sysctls[i].value);
}

static int wait_for_loop(int pid)
{
	if (pid < 0)
	exit(1);
	int status = 0;
	while (waitpid(-1, &status, __WALL) != pid) {
	}
	return WEXITSTATUS(status);
}

static void drop_caps(void)
{
	struct __user_cap_header_struct cap_hdr = {};
	struct __user_cap_data_struct cap_data[2] = {};
	cap_hdr.version = _LINUX_CAPABILITY_VERSION_3;
	cap_hdr.pid = getpid();
	if (syscall(SYS_capget, &cap_hdr, &cap_data))
	exit(1);
	const int drop = (1 << CAP_SYS_PTRACE) | (1 << CAP_SYS_NICE);
	cap_data[0].effective &= ~drop;
	cap_data[0].permitted &= ~drop;
	cap_data[0].inheritable &= ~drop;
	if (syscall(SYS_capset, &cap_hdr, &cap_data))
	exit(1);
}

static int do_sandbox_none(void)
{
	if (unshare(CLONE_NEWPID)) {
	}
	int pid = fork();
	if (pid != 0)
		return wait_for_loop(pid);
	sandbox_common();
	drop_caps();
	if (unshare(CLONE_NEWNET)) {
	}
	write_file("/proc/sys/net/ipv4/ping_group_range", "0 65535");
	sandbox_common_mount_tmpfs();
	loop();
	exit(1);
}

#define FS_IOC_SETFLAGS _IOW('f', 2, long)
static void remove_dir(const char* dir)
{
	int iter = 0;
	DIR* dp = 0;
	const int umount_flags = MNT_FORCE | UMOUNT_NOFOLLOW;

retry:
		while (umount2(dir, umount_flags) == 0) {
		}
	dp = opendir(dir);
	if (dp == NULL) {
		if (errno == EMFILE) {
	exit(1);
		}
	exit(1);
	}
	struct dirent* ep = 0;
	while ((ep = readdir(dp))) {
		if (strcmp(ep->d_name, ".") == 0 || strcmp(ep->d_name, "..") == 0)
			continue;
		char filename[FILENAME_MAX];
		snprintf(filename, sizeof(filename), "%s/%s", dir, ep->d_name);
			while (umount2(filename, umount_flags) == 0) {
			}
		struct stat st;
		if (lstat(filename, &st))
	exit(1);
		if (S_ISDIR(st.st_mode)) {
			remove_dir(filename);
			continue;
		}
		int i;
		for (i = 0;; i++) {
			if (unlink(filename) == 0)
				break;
			if (errno == EPERM) {
				int fd = open(filename, O_RDONLY);
				if (fd != -1) {
					long flags = 0;
					if (ioctl(fd, FS_IOC_SETFLAGS, &flags) == 0) {
					}
					close(fd);
					continue;
				}
			}
			if (errno == EROFS) {
				break;
			}
			if (errno != EBUSY || i > 100)
	exit(1);
				if (umount2(filename, umount_flags))
	exit(1);
		}
	}
	closedir(dp);
	for (int i = 0;; i++) {
		if (rmdir(dir) == 0)
			break;
		if (i < 100) {
			if (errno == EPERM) {
				int fd = open(dir, O_RDONLY);
				if (fd != -1) {
					long flags = 0;
					if (ioctl(fd, FS_IOC_SETFLAGS, &flags) == 0) {
					}
					close(fd);
					continue;
				}
			}
			if (errno == EROFS) {
				break;
			}
			if (errno == EBUSY) {
					if (umount2(dir, umount_flags))
	exit(1);
				continue;
			}
			if (errno == ENOTEMPTY) {
				if (iter < 100) {
					iter++;
					goto retry;
				}
			}
		}
	exit(1);
	}
}

static void kill_and_wait(int pid, int* status)
{
	kill(-pid, SIGKILL);
	kill(pid, SIGKILL);
	for (int i = 0; i < 100; i++) {
		if (waitpid(-1, status, WNOHANG | __WALL) == pid)
			return;
		usleep(1000);
	}
	DIR* dir = opendir("/sys/fs/fuse/connections");
	if (dir) {
		for (;;) {
			struct dirent* ent = readdir(dir);
			if (!ent)
				break;
			if (strcmp(ent->d_name, ".") == 0 || strcmp(ent->d_name, "..") == 0)
				continue;
			char abort[300];
			snprintf(abort, sizeof(abort), "/sys/fs/fuse/connections/%s/abort", ent->d_name);
			int fd = open(abort, O_WRONLY);
			if (fd == -1) {
				continue;
			}
			if (write(fd, abort, 1) < 0) {
			}
			close(fd);
		}
		closedir(dir);
	} else {
	}
	while (waitpid(-1, status, __WALL) != pid) {
	}
}

static void reset_loop()
{
	char buf[64];
	snprintf(buf, sizeof(buf), "/dev/loop%llu", procid);
	int loopfd = open(buf, O_RDWR);
	if (loopfd != -1) {
		ioctl(loopfd, LOOP_CLR_FD, 0);
		close(loopfd);
	}
}

static void setup_test()
{
	prctl(PR_SET_PDEATHSIG, SIGKILL, 0, 0, 0);
	setpgrp();
	write_file("/proc/self/oom_score_adj", "1000");
	if (symlink("/dev/binderfs", "./binderfs")) {
	}
}

static void close_fds()
{
	for (int fd = 3; fd < MAX_FDS; fd++)
		close(fd);
}

#define USLEEP_FORKED_CHILD (3 * 50 *1000)

static long handle_clone_ret(long ret)
{
	if (ret != 0) {
		return ret;
	}
	usleep(USLEEP_FORKED_CHILD);
	syscall(__NR_exit, 0);
	while (1) {
	}
}

#define MAX_CLONE_ARGS_BYTES 256
static long syz_clone3(volatile long a0, volatile long a1)
{
	unsigned long copy_size = a1;
	if (copy_size < sizeof(uint64_t) || copy_size > MAX_CLONE_ARGS_BYTES)
		return -1;
	char clone_args[MAX_CLONE_ARGS_BYTES];
	memcpy(&clone_args, (void*)a0, copy_size);
	uint64_t* flags = (uint64_t*)&clone_args;
	*flags &= ~CLONE_VM;
	return handle_clone_ret((long)syscall(__NR_clone3, &clone_args, copy_size));
}

struct thread_t {
	int created, call;
	event_t ready, done;
};

static struct thread_t threads[16];
static void execute_call(int call);
static int running;

static void* thr(void* arg)
{
	struct thread_t* th = (struct thread_t*)arg;
	for (;;) {
		event_wait(&th->ready);
		event_reset(&th->ready);
		execute_call(th->call);
		__atomic_fetch_sub(&running, 1, __ATOMIC_RELAXED);
		event_set(&th->done);
	}
	return 0;
}

static void execute_one(void)
{
	if (write(1, "executing program\n", sizeof("executing program\n") - 1)) {
	}
	int i, call, thread;
	for (call = 0; call < 2; call++) {
		for (thread = 0; thread < (int)(sizeof(threads) / sizeof(threads[0])); thread++) {
			struct thread_t* th = &threads[thread];
			if (!th->created) {
				th->created = 1;
				event_init(&th->ready);
				event_init(&th->done);
				event_set(&th->done);
				thread_start(thr, th);
			}
			if (!event_isset(&th->done))
				continue;
			event_reset(&th->done);
			th->call = call;
			__atomic_fetch_add(&running, 1, __ATOMIC_RELAXED);
			event_set(&th->ready);
			event_timedwait(&th->done, 50 + (call == 0 ? 4000 : 0));
			break;
		}
	}
	for (i = 0; i < 100 && __atomic_load_n(&running, __ATOMIC_RELAXED); i++)
		sleep_ms(1);
	close_fds();
}

static void execute_one(void);

#define WAIT_FLAGS __WALL

static void loop(void)
{
	int iter = 0;
	for (;; iter++) {
		char cwdbuf[32];
		sprintf(cwdbuf, "./%d", iter);
		if (mkdir(cwdbuf, 0777))
	exit(1);
		reset_loop();
		int pid = fork();
		if (pid < 0)
	exit(1);
		if (pid == 0) {
			if (chdir(cwdbuf))
	exit(1);
			setup_test();
			execute_one();
			exit(0);
		}
		int status = 0;
		uint64_t start = current_time_ms();
		for (;;) {
			sleep_ms(10);
			if (waitpid(-1, &status, WNOHANG | WAIT_FLAGS) == pid)
				break;
			if (current_time_ms() - start < 5000)
				continue;
			kill_and_wait(pid, &status);
			break;
		}
		remove_dir(cwdbuf);
	}
}

void execute_call(int call)
{
		switch (call) {
	case 0:
memcpy((void*)0x200000000140, "jfs\000", 4);
memcpy((void*)0x200000005d40, "./file0\000", 8);
memcpy((void*)0x200000000000, "noquota", 7);
*(uint8_t*)0x200000000007 = 0x2c;
*(uint8_t*)0x200000000008 = 0;
memcpy((void*)0x20000000bac0, "\x78\x9c\xec\xdd\x4d\x6f\x1d\x57\x19\x07\xf0\xe7\xbe\xf8\xfa\xa5\x34\x8d\x2a\x54\x85\x88\x45\x9a\x42\x69\x29\xcd\x7b\x02\xe5\xad\x29\x0b\x16\xb0\x00\x09\x65\x4d\x22\xd7\xad\x02\x29\xa0\x24\x20\x5a\x45\xc4\x95\x17\x88\x15\x5f\x01\x36\xdd\xb0\xe8\x57\xe0\x03\xf4\x33\x20\x3e\x00\x91\x6c\x56\x59\x50\x06\x8d\x7d\x8e\x33\x1e\x5f\xe7\x3a\x24\xbe\x73\xed\xf3\xfb\x49\xce\xcc\x33\xe7\x8e\xef\x99\xfc\x3d\x9e\x7b\x3d\x33\xf7\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x3f\xfa\xe1\xcf\xce\xf7\x22\xe2\xfa\xef\xd2\x82\xe3\x11\x5f\x88\x41\x44\x3f\x62\xb1\xae\x4f\x45\x3d\x73\x35\x3f\x7e\x18\x11\x27\x62\xb3\x39\x5e\x8a\x88\xc1\x7c\x44\xbd\xfe\xe6\x3f\x2f\x44\x5c\x8a\x88\xcf\x8e\x45\xac\x6f\xdc\x5b\xae\x17\x5f\xd8\x67\x3f\x2e\x9f\xbb\x7b\xfb\xf3\x1f\xff\xe0\x1f\x7f\xfc\xf3\xda\x89\x5f\xbc\xfb\xf3\x4f\xda\xed\x3f\xfd\xe2\xc5\x4f\xff\x74\x3f\xe2\xf8\x4f\xde\xfa\xf4\xf3\xfb\xcf\x66\xdb\x01\x00\x00\xa0\x14\x55\x55\x55\xbd\xf4\x36\xff\x64\x7a\x7f\xdf\xef\xba\x53\x00\xc0\x54\xe4\xe3\x7f\x95\xe4\xe5\x6a\xb5\x5a\x7d\xb8\xeb\x87\xdb\x4b\x66\xa3\x3f\x6a\xf5\x6c\xd4\x4d\xd5\x78\xf7\x9b\x45\x44\xac\x36\xd7\xa9\x5f\x33\x38\x1d\x0f\x00\x87\xcc\x6a\x3c\xec\xba\x0b\x74\x48\xfe\x45\x1b\x46\xc4\x73\x5d\x77\x02\x98\x69\xbd\xae\x3b\xc0\x81\x58\xdf\xb8\xb7\xdc\x4b\xf9\xf6\x9a\xc7\x83\x53\x5b\xed\xf9\x5a\x90\x1d\xf9\xaf\xf6\xb6\xef\xef\xd8\x6b\x3a\x49\xfb\x1a\x93\x69\xfd\x7c\xad\xc5\x20\x5e\xdc\xa3\x3f\x8b\x53\xea\xc3\x2c\xc9\xf9\xf7\xdb\xf9\x5f\xdf\x6a\x1f\xa5\xc7\x1d\x74\xfe\xd3\xb2\x57\xfe\xa3\xad\x5b\x9f\x8a\x93\xf3\x1f\xb4\xf3\x6f\x39\x3a\xf9\xf7\xc7\xe6\x5f\xaa\x9c\xff\xf0\x89\xf2\x1f\xc8\x1f\x00\x00\x00\x00\x00\x66\x58\xfe\xfb\xff\xf1\x8e\xcf\xff\xce\x3f\xfd\xa6\xec\xcb\xe3\xce\xff\x9e\x9a\x52\x1f\x00\x00\x00\x00\x00\x00\x00\xe0\x59\x7b\xda\xf1\xff\xb6\x19\xff\x0f\x00\x00\x00\x66\x56\xfd\x5e\xbd\xf6\x97\x63\x8f\x96\xed\xf5\x59\x6c\xf5\xf2\x6b\xbd\x88\xe7\x5b\x8f\x07\x0a\x93\x6e\x96\x59\xea\xba\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x50\x92\xe1\xd6\x35\xbc\xd7\x7a\x11\x73\x11\xf1\xfc\xd2\x52\x55\x55\xf5\x57\x53\xbb\x7e\x52\x4f\xbb\xfe\x61\x57\xfa\xf6\x43\xc9\xba\xfe\x25\x0f\x00\x00\x5b\x3e\x3b\xd6\xba\x97\xbf\x17\xb1\x10\x11\xd7\xd2\x67\xfd\xcd\x2d\x2d\x2d\x55\xd5\xc2\xe2\x52\xb5\x54\x2d\xce\xe7\xd7\xb3\xa3\xf9\x85\x6a\xb1\xf1\xbe\x36\x4f\xeb\x65\xf3\xa3\x7d\xbc\x20\x1e\x8e\xaa\xfa\x9b\x2d\x34\xd6\x6b\x9a\xf4\x7e\x79\x52\x7b\xfb\xfb\xd5\xcf\x35\xaa\x06\xfb\xe8\xd8\x74\x74\x18\x38\x00\x44\xc4\xd6\xd1\x68\xdd\x11\xe9\x88\xa9\xaa\x17\xa2\xeb\x57\x39\x1c\x0e\xf6\xff\xa3\xc7\xfe\xcf\x7e\x74\xfd\x73\x0a\x00\x00\x00\x1c\xbc\xaa\xaa\xaa\x5e\xfa\x38\xef\x93\xe9\x9c\x7f\xbf\xeb\x4e\x01\x00\x53\x91\x8f\xff\xed\xf3\x02\x6a\xb5\x5a\xad\x56\xab\x8f\x5e\xdd\x54\x8d\x77\xbf\x59\x44\xc4\x6a\x73\x9d\xfa\x35\x83\xe1\xf8\x01\xe0\x90\x59\x8d\x87\x5d\x77\x81\x0e\xc9\xbf\x68\xc3\x88\x38\xd1\x75\x27\x80\x99\xd6\xeb\xba\x03\x1c\x88\xf5\x8d\x7b\xcb\xbd\x94\x6f\xaf\x79\x3c\x48\xe3\xbb\xe7\x6b\x41\x76\xe4\xbf\xda\xdb\x5c\x2f\xaf\x3f\x6e\x3a\x49\xfb\x1a\x93\x69\xfd\x7c\xad\xc5\x20\x5e\xdc\xa3\x3f\x2f\x4d\xa9\x0f\xb3\x24\xe7\xdf\x6f\xe7\x7f\x7d\xab\x7d\x94\x1e\x77\xd0\xf9\x4f\xcb\x5e\xf9\xd7\xdb\x79\xbc\x83\xfe\x74\x2d\xe7\x3f\x68\xe7\xdf\x72\x74\xf2\xef\x8f\xcd\xbf\x54\x39\xff\xe1\x13\xe5\x3f\x90\x3f\x00\x00\x00\x00\x00\xcc\xb0\xfc\xf7\xff\xe3\xce\xff\xe6\x4d\x06\x00\x00\x00\x00\x00\x00\x80\x43\x67\x7d\xe3\xde\x72\xbe\xef\x35\x9f\xff\xff\xf2\x98\xc7\xb9\xff\xf3\x68\xca\xf9\xf7\xe4\x5f\xa4\x9c\x7f\xbf\x9d\x7f\xeb\x82\x9c\x41\x63\xfe\xc1\x3b\x8f\xf2\xff\xf7\xc6\xbd\xe5\x4f\xee\xfe\xeb\x4b\x79\x3a\xf3\xf9\xcf\x0d\x46\xf5\x73\xcf\xf5\xfa\x83\x61\x55\x55\x9b\x9f\x5d\x3a\xf7\x5e\xdc\x8c\x5b\xb1\x12\xe7\x76\x3d\xbe\xfe\xff\xa8\xb6\xdb\xcf\xef\x6a\x9f\xdb\xd1\x7e\x61\x42\xfb\xc5\x5d\xed\xa3\xba\x7d\x31\xb7\x9f\x89\xe5\xf8\x75\xdc\x8a\x77\xb7\xdb\xe7\x27\x5c\x18\xb5\x30\xa1\xbd\x9a\xd0\x9e\xf3\x1f\xd8\xff\x8b\x94\xf3\x1f\x36\xbe\xea\xfc\x97\x52\x7b\xaf\x35\xad\x3d\xf8\xb8\xbf\x6b\xbf\x6f\x4e\xc7\x3d\xcf\xd5\xbf\xfd\xe7\xd5\xdd\x7b\xd7\xf4\xad\xc5\x60\x7b\xdb\x9a\xea\xed\x3b\xdd\x41\x7f\x36\xff\x4f\x9e\x1b\xc5\x6f\xef\xac\xdc\x3e\xf3\xfb\x1b\x77\xef\xde\x3e\x1f\x69\xb2\x63\xe9\x85\x48\x93\x67\x2c\xe7\x3f\x97\xbe\x72\xfe\xaf\xbd\xb2\xd5\x9e\x7f\xef\x37\xf7\xd7\x07\x1f\x8f\x9e\x38\xff\x59\xb1\x16\xc3\x3d\xf3\x7f\xa5\x31\x5f\x6f\xef\xeb\x53\xee\x5b\x17\x72\xfe\xa3\xf4\x95\xf3\xcf\x47\xa0\xf1\xfb\xff\x61\xce\x7f\xef\xfd\xff\x8d\x0e\xfa\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8f\x53\x55\xd5\xe6\x2d\xa2\x57\x23\xe2\x4a\xba\xff\xa7\xab\x7b\x33\x01\x80\xe9\xca\xc7\xff\x2a\xc9\xcb\xd5\x6a\xb5\x5a\xad\x56\x1f\xbd\xba\xa9\x1a\xef\xed\x66\x11\x11\x7f\x6f\xae\x53\xbf\x66\xf8\xc3\xb8\x6f\x06\x00\xcc\xb2\xff\x46\xc4\x3f\xbb\xee\x04\x9d\x91\x7f\xc1\xf2\xe7\xfd\xd5\xd3\xaf\x74\xdd\x19\x60\xaa\xee\x7c\xf8\xd1\x2f\x6f\xdc\xba\xb5\x72\xfb\x4e\xd7\x3d\x01\x00\x00\x00\x00\x00\x00\x00\xfe\x5f\x79\xfc\xcf\x53\x8d\xf1\x9f\x37\xaf\x03\x6a\x8d\x1b\xbd\x63\xfc\xd7\x77\xe2\xd4\xa1\x1d\xff\xb3\x3f\x1a\x6c\x8e\x75\x9e\x36\xe8\xe5\x68\x8e\xcf\xbd\x7b\x84\xe2\xd3\xf1\xf8\xf1\xbf\x87\x13\x9e\x6f\x6e\x42\xfb\x68\x42\xfb\xfc\x84\xf6\x85\x09\xed\x63\x6f\xf4\x68\xc8\xf9\xbf\x9c\x32\xce\xf9\x9f\x4c\x1b\x56\xd2\xf8\xaf\xaf\x75\xd0\x9f\xae\xe5\xfc\x4f\xa7\xb1\x9e\x73\xfe\x5f\x6b\x3d\xae\x99\x7f\xf5\xd7\xc3\x9c\x7f\x7f\x47\xfe\x67\xef\x7e\xf0\x9b\xb3\x77\x3e\xfc\xe8\xcd\x9b\x1f\xdc\x78\x7f\xe5\xfd\x95\x5f\x9d\x3f\x77\xe5\xd2\xc5\xcb\x97\x2e\x5e\xbe\x7c\xf6\xbd\x9b\xb7\x56\xce\x6d\xfd\xdb\x61\x8f\x0f\x56\xce\x3f\x8f\x7d\xed\x3a\xd0\xb2\xe4\xfc\x73\xe6\xf2\x2f\x4b\xce\xff\xab\xa9\x96\x7f\x59\x72\xfe\xaf\xa6\x5a\xfe\x65\xc9\xf9\xe7\xd7\x7b\xf2\x2f\x4b\xce\x3f\xbf\xf7\x91\x7f\x59\x72\xfe\xaf\xa7\x5a\xfe\x65\xc9\xf9\x7f\x3d\xd5\xf2\x2f\x4b\xce\xff\x8d\x54\xcb\xbf\x2c\x39\xff\x6f\xa4\x5a\xfe\x65\xc9\xf9\xbf\x99\x6a\xf9\x97\x25\xe7\x7f\x26\xd5\xf2\x2f\x4b\xce\xff\x6c\xaa\xe5\x5f\x96\x9c\x7f\x3e\xc3\x25\xff\xb2\xe4\xfc\xf3\x95\x0d\xf2\x2f\x4b\xce\xff\x42\xaa\xe5\x5f\x96\x9c\xff\xc5\x54\xcb\xbf\x2c\x39\xff\x4b\xa9\x96\x7f\x59\x72\xfe\x97\x53\x2d\xff\xb2\xe4\xfc\xaf\xa4\x5a\xfe\x65\xc9\xf9\x7f\x33\xd5\xf2\x2f\x4b\xce\xff\x5b\xa9\x96\x7f\x59\x72\xfe\x6f\xa5\x5a\xfe\x65\xc9\xf9\x7f\x3b\xd5\xf2\x2f\x4b\xce\xff\x3b\xa9\x96\x7f\x59\x72\xfe\xdf\x4d\xb5\xfc\xcb\x92\xf3\xff\x5e\xaa\xe5\x5f\x96\x9c\xff\xf7\x53\x2d\xff\xb2\xe4\xfc\xdf\x4e\xb5\xfc\xcb\xf2\xe8\xf3\xff\xcd\x98\x31\x63\x26\xcf\x74\xfd\x9b\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x68\x9b\xc6\xe5\xc4\x5d\x6f\x23\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x63\x07\x0e\x04\x00\x00\x00\x00\x80\xfc\x5f\x1b\xa1\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x0a\x3b\x70\x20\x00\x00\x00\x00\x00\xe4\xff\xda\x08\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\xd8\xbb\xbb\x18\xb9\xca\xfb\x0c\xe0\x67\xbf\xec\xb5\x21\xc1\x0d\x84\x00\x71\xc0\x36\x5f\x06\x16\x76\xd7\x5f\xe0\x10\x83\x49\x42\x4a\x49\x3f\x28\x09\x69\xd3\x92\x1a\xc7\x5e\x1b\x27\xfe\xaa\x77\x97\x2f\xa1\xb2\x29\xb4\x25\x0a\x52\x91\xda\x0b\x7a\xd1\x34\x89\xd2\x28\x52\x5b\x81\xaa\x48\x4d\x25\x1a\x51\x35\x52\x7b\x51\xa9\xb9\x6a\xc4\x4d\xd4\x4a\xb9\xf0\x05\x54\x0e\x4a\x2a\xa5\x0a\x6c\x75\x66\xde\xf7\xf5\xcc\xec\x7a\xce\x1a\x7b\x60\xe6\xbc\xbf\x5f\x64\xff\xbd\x33\xe7\xcc\xbc\x73\xe6\xcc\xec\x3e\x1b\x3d\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd0\x6a\xe3\xc7\x66\xfe\x64\xa8\x28\x8a\xf2\x4f\xe3\xaf\x75\x45\x71\x61\xf9\xef\x35\xc5\xee\xf2\xcb\x85\x1d\xef\xf6\x0a\x01\x00\x00\x80\x73\xf5\x66\xe3\xef\xbf\xbd\x28\x5d\xb0\x7b\x05\x3b\xb5\x6c\xf3\xaf\x57\xfe\xc7\x77\x16\x17\x17\x17\x8b\xcf\xbf\x71\xf2\xad\x3f\x5b\x5c\x4c\x57\x6c\x28\x8a\x91\xd5\x45\xd1\xb8\x2e\xfa\xb7\x9f\xff\x6c\xb1\x75\x9b\xe0\xe9\x62\x7c\x68\xb8\xe5\xeb\xe1\x8a\xbb\x1f\xa9\xb8\x7e\xb4\xe2\xfa\xb1\x8a\xeb\x57\x55\x5c\xbf\xba\xe2\xfa\xf1\x8a\xeb\x97\x1c\x80\x25\xd6\x34\x7f\x1f\xd3\xb8\xb1\x6b\x1a\xff\x5c\xd7\x3c\xa4\xc5\x25\xc5\x58\xe3\xba\x6b\x96\xd9\xeb\xe9\xa1\xd5\xc3\xc3\xf1\x77\x39\x0d\x43\x8d\x7d\x16\xc7\x0e\x14\x87\x8a\xc3\xc5\x4c\x31\xb5\x64\x9f\xa1\xc6\xff\x8a\xe2\xe5\x8d\xe5\x7d\xdd\x53\xc4\xfb\x1a\x6e\xb9\xaf\xf5\x45\x51\x9c\xfa\xc9\x93\xfb\xe2\x1a\x86\xc2\x31\xbe\xa6\x68\xbb\xb3\x86\xd6\xe7\xee\xf5\xbb\x8a\x0d\x6f\xfc\xe4\xc9\x7d\xdf\x9a\x7b\xed\xf2\xe5\x66\xe5\x61\x58\xb2\xd2\xa2\xd8\xbc\xa9\x5c\xe7\x33\x45\x71\xfa\xd7\x55\xc5\x50\xb1\x3a\x1d\x93\xb8\xce\xe1\x96\x75\xae\x5f\x66\x9d\x23\x6d\xeb\x1c\x6a\xec\x57\xfe\xbb\x73\x9d\xa7\x56\xb8\xce\xf8\xb8\xc7\xc3\x3a\x7f\xd0\x65\x9d\xeb\xc3\x65\x8f\x5d\x5d\x14\xc5\x42\x71\xc6\x6d\x3a\x3d\x5d\x0c\x17\x6b\x3b\xee\x35\x1d\xef\xf1\xe6\x19\x51\xde\x46\xf9\x54\xbe\xaf\x18\x3d\xab\xf3\x64\xe3\x0a\xce\x93\x72\x9f\x1f\x5f\xdd\x7e\x9e\x74\x9e\x93\xf1\xf8\x6f\x0c\xc7\x64\xf4\x0c\x6b\x68\x7d\x3a\x5e\xff\xd2\xaa\x25\xc7\xfd\xed\x9e\x27\xe5\xa3\xee\x87\x73\xb5\xbc\xed\xfb\xca\x3b\x1d\x1f\x6f\xfd\xd5\x6a\xdb\xb9\x5a\x6e\xf3\xe4\xb5\x67\x3e\x07\x96\x7d\xee\x96\x39\x07\xd2\xb9\xdc\x72\x0e\x6c\xaa\x3a\x07\x86\x57\x8d\x34\xce\x81\xe1\xd3\x6b\xde\xd4\x76\x0e\x4c\x2f\xd9\x67\xb8\x18\x6a\xdc\xd7\xc9\x6b\xbb\x9f\x03\x93\x73\x47\x8e\x4f\xce\x3e\xfe\xc4\xcd\x87\x8e\xec\x3d\x38\x73\x70\xe6\xe8\xf4\xd4\x8e\x6d\x5b\xb7\x6f\xdb\xba\x7d\xfb\xe4\x81\x43\x87\x67\xa6\x9a\x7f\x9f\xdd\x21\x1d\x20\x6b\x8b\xe1\x74\x0e\x6e\x0a\xef\x35\xf1\x1c\xbc\xbe\x63\xdb\xd6\x53\x72\xf1\xeb\xe7\xef\x75\x30\xde\x27\xaf\x83\xf2\xb1\x7f\xfa\xba\x72\x41\x17\x0e\x17\x67\x38\xc7\xcb\x6d\x9e\xd9\x7c\xee\xaf\x83\xf4\x7d\xbf\xe5\x75\x30\xda\xf2\x3a\x58\xf6\x3d\x75\x99\xd7\xc1\xe8\x0a\x5e\x07\xe5\x36\xa7\x36\xaf\xec\x7b\xe6\x68\xcb\x9f\xe5\xd6\xd0\xab\xf7\xc2\x75\x2d\xe7\xc0\xbb\xf9\xfd\xb0\xbc\xcf\x07\x6f\x38\xf3\x7b\xe1\xfa\xb0\xae\x67\x6f\x3c\xdb\xef\x87\x23\x4b\xce\x81\xf8\xb0\x86\xc2\x6b\xaf\xbc\x24\xfd\xbc\x37\x7e\x5b\x38\x2e\x4b\xcf\x8b\x2b\xca\x2b\x2e\x58\x55\xcc\xcf\xce\x9c\xb8\xe5\xb1\xbd\x73\x73\x27\xa6\x8b\x30\xde\x11\x17\xb7\x3c\x57\x9d\xe7\xcb\xda\x96\xc7\x54\x2c\x39\x5f\x86\xcf\xfa\x7c\xd9\xfd\x37\xbf\xb8\xee\x8a\x65\x2e\x5f\x17\x8e\xd5\xf8\x4d\xdd\x9f\xab\x72\x9b\x6d\x13\xdd\x9f\xab\xc6\xbb\xfb\xf2\xc7\xb3\xed\xd2\x2d\x45\x18\xe7\xd9\x3b\x7d\x3c\x97\xfb\x6e\x56\x1e\xcf\x94\x25\xba\x1c\xcf\x72\x9b\x67\x6e\x3e\xf7\x9f\x05\x53\x2e\x69\x79\xff\x1b\xab\x7a\xff\x1b\x19\x1b\x6d\xbe\xff\x8d\xa4\xa3\x31\xd6\xf6\xfe\xb7\xf4\xa9\x19\x69\xac\xac\x28\x4e\xdd\xbc\xb2\xf7\xbf\xb1\xf0\xe7\x9d\x7e\xff\xbb\xa4\x4f\xde\xff\xca\x63\xf5\xe0\x2d\xdd\xcf\x81\x72\x9b\x67\x27\xcf\xf6\x1c\x18\xed\xfa\xfe\x77\x75\x98\x43\x61\x3d\x37\x84\xc4\x30\xde\x92\xfb\xdf\x6a\x5c\xbf\xd0\x3c\x4d\x5b\x9e\xcb\xca\xf3\x66\x74\x74\x2c\x9c\x37\xa3\xf1\x1e\xdb\xcf\x9b\xad\x4b\xf6\x29\x6f\xad\xbc\xef\xcd\x53\x6f\xef\xbc\xd9\x7c\x75\xfb\x73\xd5\xf6\x73\x4b\x0d\xcf\x9b\xf2\x58\xfd\xf9\x54\xf7\xf3\xa6\xdc\xe6\x95\xe9\x73\x7f\xef\x58\x13\xff\xd9\xf2\xde\xb1\xaa\xea\x1c\x18\x1b\x59\x55\xae\x77\x2c\x9d\x04\xcd\xf7\xbb\xc5\x35\xf1\x1c\xb8\xa5\xd8\x57\x1c\x2b\x0e\x17\xfb\xd3\x3e\xe5\xb3\x5c\xde\xd7\xc4\x96\x95\x9d\x03\xab\xc2\x9f\x77\xfa\xbd\xe3\xb2\x3e\x39\x07\xca\x63\xf5\xc2\x96\xee\xe7\x40\xb9\xcd\xf7\xb7\x9e\xdf\x9f\x9d\x36\x87\x4b\xd2\x36\x2d\x3f\x3b\x75\xfe\x7e\xe1\x4c\x99\xff\x8a\xd1\xd3\xb7\xd7\x79\xd8\xce\x77\xe6\x2f\xd7\xf9\xf1\x6d\xdd\x7f\x37\x54\x6e\xf3\xda\xb6\xb3\xcd\x19\xdd\x8f\xd3\x4d\xe1\x92\x0b\x96\x39\x4e\x9d\xaf\x9f\x33\x9d\xd3\xfb\x8b\x77\xe6\x38\x5d\x16\xd6\x79\x78\x7b\xf7\xdf\x4d\x95\xdb\x5c\xb2\x63\x85\xe7\xd3\xee\xa2\x28\x5e\x9d\x7e\xb5\xf1\xfb\xae\xf0\xfb\xdd\xbf\x9f\xff\xcf\xef\xb4\xfd\xde\x77\xb9\xdf\x29\xbf\x3a\xfd\xea\xbd\x93\xf7\xff\xf0\x6c\xd6\x0f\x00\xc0\xdb\xf7\x56\xe3\xef\x85\x55\xcd\x9f\x35\x5b\xfe\x1f\xeb\x95\xfc\xff\xff\x00\x00\x00\xc0\x40\x88\xb9\x7f\x38\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\x7f\x24\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\x7f\x34\xcc\x24\x93\xfc\xff\xf0\x6d\x3b\x5f\x7c\xf3\xa9\x22\x7d\x1a\xe0\x62\x10\xaf\x8f\x87\xe1\xbe\x3b\x9a\xdb\xc5\x8e\xf7\x42\xf8\x7a\xc3\xe2\x69\xe5\xe5\x1f\xfd\xe6\xd8\x8b\x5f\x7e\x6a\x65\xf7\x3d\x5c\x14\xc5\x2f\xee\xfd\xe0\xb2\xdb\x3f\x7c\x47\x5c\x57\xd3\xf1\xb8\xce\x0f\xb7\x5f\xbe\xc4\x65\x57\xad\xe8\xfe\x1f\x7a\xe0\xf4\x76\xad\x9f\x9f\x70\x6a\x67\xf3\xf6\xe3\xe3\x59\xe9\x69\x10\xbb\xca\x2f\x4f\x6e\x69\xdc\xee\x86\xc7\xa7\x1b\xf3\x95\x7b\x8b\xc6\xbc\x7f\xe1\xd9\xa7\x9b\xb7\xdf\xfc\x3a\x6e\x7f\x72\x6b\x73\xfb\xbf\x0c\x1f\x5a\xb2\xfb\xc0\x50\xdb\xfe\x9b\xc3\x7a\xae\x09\x73\x43\xf8\x4c\x99\xfb\x76\x9f\x3e\x0e\xe5\x8c\xfb\xbd\xb8\xfe\xca\x7f\xb9\xf8\x33\xa7\xef\x2f\xee\x37\xb4\xe9\xbd\x8d\x87\xf9\xc2\x1f\x34\x6f\x37\x7e\x46\xd4\xf3\x17\x37\xb7\x8f\x8f\xfb\x4c\xeb\xff\xa7\xaf\x7c\xfb\xc5\x72\xfb\xc7\xae\x5d\x7e\xfd\x4f\x0d\x2f\xbf\xfe\x93\xe1\x76\x7f\x1c\xe6\xcf\x77\x35\xb7\x6f\x3d\xe6\x5f\x6e\x59\xff\x1f\x85\xf5\xc7\xfb\x8b\xfb\xdd\xf2\x8d\xef\x2d\xbb\xfe\x97\x3e\xd0\xdc\xfe\xa5\x70\x5e\x7c\x2d\xcc\xce\xf5\xdf\xf5\xa7\x1f\x7a\x73\xb9\xe7\x2b\xde\xcf\xee\xdb\x9b\xfb\xc5\xfb\x9f\xfa\xdf\x6d\x8d\xfd\xe2\xed\xc5\xdb\xef\x5c\xff\xf8\x53\xd3\x6d\xc7\xa3\xf3\xf6\x5f\x79\xa3\x79\x3b\xbb\x1e\xf9\xe9\x48\xeb\xf6\xf1\xf2\x78\x3f\xd1\x43\xb7\xb7\x9f\xdf\x43\xe1\xf9\x6d\xeb\x91\x17\x45\xf1\xed\x3f\x2e\xda\x8e\x73\xf1\x91\xe6\x7e\xff\xd8\xb1\xfe\x78\x7b\xc7\x6f\x5f\x7e\xfd\x37\x75\xac\xf3\xf8\xd0\x55\x8d\xfd\x4f\x3f\x9e\x75\x6d\x8f\xeb\xab\x7f\xbd\x65\xd9\xc7\x1b\xd7\xb3\xfb\xef\xd6\xb5\x3d\x9e\xe7\xef\x0e\xc7\xef\x8d\xc9\xef\x97\xb7\x7b\xf2\xfe\x70\x3e\x86\xeb\xff\xef\x07\xcd\xdb\xeb\xfc\x2c\xd3\x97\xee\x6e\x7f\xbf\x89\xdb\x7f\x6d\x5d\xf3\x75\x1b\x6f\x6f\xb2\x63\xfd\xcf\x77\xac\x7f\xe1\xaa\xf2\xd8\x55\xaf\xff\x9e\x37\x9a\xeb\x7f\xe9\xce\xd5\x6d\xeb\xdf\xfd\x89\x70\x3e\xdd\xd3\x9c\x55\xeb\x3f\xf8\x57\x17\xb5\xed\xff\xf5\x6f\x35\x9f\x8f\x13\x8f\x4e\x1c\x3d\x36\x3b\x7f\x68\x7f\xcb\x51\x6d\x7d\x1d\xaf\x1e\x5f\xb3\xf6\x82\x0b\xdf\xf3\xde\x8b\xc2\x7b\x69\xe7\xd7\x7b\x8e\xcd\x3d\x3c\x73\x62\xc3\xd4\x86\xa9\xa2\xd8\x30\x80\x1f\x19\xd8\xeb\xf5\x7f\x23\xcc\xff\x69\x8e\x85\xf3\x7f\x0f\x4d\x3f\xfc\x69\xf3\xbc\x7b\xee\x93\xcd\xef\x5b\xd7\xff\xac\xf9\xf5\xf3\xe1\xf2\x87\xc2\xf3\x19\xbf\x3f\x7e\xf5\x2f\xc6\xda\xce\xd7\xce\xe7\x7d\xe1\xce\xe6\x3c\xd7\xf5\xdf\x18\xd6\xb1\x52\x1f\xf8\xca\x7f\x5f\xb5\xa2\x0d\x4f\x7e\xee\xe5\xf9\x7f\xf8\xc3\xd7\x3a\x7f\x2e\x88\x8f\xe7\xf8\xfb\xc7\x1b\x8f\xef\x85\x8d\x97\x36\xae\x1b\x7a\xa5\x79\x7d\xe7\xfb\x55\x95\xff\x7a\x7f\xfb\xeb\xfa\x47\xa3\x53\x8d\xf9\xdd\x70\x5c\x17\xc3\x27\x33\x6f\xba\xb4\x79\x7f\x9d\xb7\x1f\x3f\x9b\xe4\xb9\x4f\x35\x5f\xbf\xf1\x27\xb9\xb8\x7f\xd1\xf1\x79\x22\xeb\x46\xda\x1f\xc7\xb9\xae\xff\x47\xe1\xe7\x98\xef\x5d\xd6\xfe\xfe\x17\xcf\x8f\xef\x3e\xd5\xf1\x69\xce\xeb\x8a\xa1\x72\x09\x0b\xe1\xfd\xa1\x58\x68\x5e\x1f\xb7\x8a\xc7\xfb\xb9\x53\x97\x2e\x7b\x7f\xf1\x73\x78\x8a\x85\xcb\xcf\x66\x99\x67\x34\xfb\xf8\xec\xe4\xe1\x43\x47\xe7\x1f\x9b\x9c\x9b\x99\x9d\x9b\x9c\x7d\xfc\x89\x3d\x47\x8e\xcd\x1f\x9d\xdb\xd3\xf8\xec\xd2\x3d\x5f\xa8\xda\xff\xf4\xeb\x7b\x6d\xe3\xf5\xbd\x7f\x66\xc7\xb6\xa2\xf1\x6a\x3f\xd6\x1c\x3d\xf6\x6e\xaf\xff\xf8\x03\xfb\xf6\xdf\x3a\x75\xdd\xfe\x99\x03\x7b\xe7\x0f\xcc\x3d\x70\x7c\xe6\xc4\xc1\x7d\xb3\xb3\xfb\x66\xf6\xcf\x5e\xb7\xf7\xc0\x81\x99\x47\xab\xf6\x3f\xb4\x7f\xd7\xf4\x96\x9d\x5b\x6f\xdd\x32\x71\xf0\xd0\xfe\x5d\xb7\xed\xdc\xb9\x75\xe7\xc4\xa1\xa3\xc7\xca\x65\x34\x17\x55\x61\xc7\xd4\x17\x27\x8e\x9e\xd8\xd3\xd8\x65\x76\xd7\xb6\x9d\xd3\xdb\xb7\x6f\x9b\x9a\x38\x72\x6c\xff\xcc\xae\x5b\xa7\xa6\x26\xe6\xab\xf6\x6f\x7c\x6f\x9a\x28\xf7\x7e\x64\xe2\xc4\xcc\xe1\xbd\x73\x87\x8e\xcc\x4c\xcc\x1e\x7a\x62\x66\xd7\xf4\xce\x1d\x3b\xb6\x54\x7e\xfa\xe3\x91\xe3\x07\x66\x37\x4c\x9e\x98\x3f\x3a\x39\x3f\x3b\x73\x62\xb2\xf9\x58\x36\xcc\x35\x2e\x2e\xbf\xf7\x55\xed\x4f\x1e\x66\x8f\x85\xf7\xbb\x0e\x43\xe1\xa7\xf3\xcf\xde\xb4\x23\x7d\x3e\x6e\xe9\x9b\x5f\x3a\xe3\x4d\x35\x37\x69\xff\xf1\xb4\x78\x3d\x7c\x16\x54\xfc\xfe\x56\xf5\x75\xcc\xfd\x63\x61\x26\x99\xe4\x7f\x00\x00\x00\xc8\x41\xcc\xfd\xe1\x83\xff\x4f\x5f\x21\xff\x03\x00\x00\x40\x6d\xc4\xdc\xbf\x3a\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\x7f\x3c\xcc\x24\x93\xfc\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xdf\x4b\xfa\xff\xfa\xff\xdd\xe8\xff\xeb\xff\x0f\xf2\xfa\xf5\xff\xf5\xff\xa9\xd6\x6f\xfd\xff\x98\xfb\xd7\x14\x45\x96\xf9\x1f\x00\x00\x00\x72\x10\x73\xff\xda\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\x0b\xc2\x4c\xe4\x7f\x00\x00\x00\xa8\x8d\x98\xfb\x2f\x0c\x33\xc9\x24\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xf7\x92\xfe\xbf\xfe\x7f\x37\xfa\xff\xfa\xff\x83\xbc\x7e\xfd\x7f\xfd\x7f\xaa\xf5\x5b\xff\x3f\xe6\xfe\xf7\x84\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\xbf\x37\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\xff\xa2\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\x75\x61\x26\x99\xe4\x7f\xfd\x7f\xfd\x7f\xfd\x7f\xfd\x7f\xfd\x7f\xfd\xff\x5e\xd2\xff\xd7\xff\xef\x46\xff\x5f\xff\x7f\x90\xd7\xaf\xff\xaf\xff\x4f\xb5\x7e\xeb\xff\xc7\xdc\xff\x4b\x61\x26\x99\xe4\x7f\x00\x00\x00\xc8\x41\xcc\xfd\xef\x0b\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\xbf\x38\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\xff\x92\x30\x93\x4c\xf2\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\x7f\x2f\xe9\xff\xeb\xff\x77\xa3\xff\xaf\xff\x3f\xc8\xeb\xd7\xff\xd7\xff\xa7\x5a\xbf\xf5\xff\x63\xee\x7f\x7f\x98\x49\x26\xf9\x1f\x00\x00\x00\x72\x10\x73\xff\xa5\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\x1f\x08\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\xbf\x2c\xcc\x24\x93\xfc\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xdf\x4b\xfa\xff\xfa\xff\xdd\xe8\xff\xeb\xff\x0f\xf2\xfa\xeb\xd6\xff\x8f\xaf\x1f\xfd\x7f\xce\xa7\x7e\xeb\xff\xc7\xdc\x7f\x79\x98\x49\x26\xf9\x1f\x00\x00\x00\x72\x10\x73\xff\x15\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\x1f\x0c\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\x5f\x1f\x66\x92\x49\xfe\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xef\x25\xfd\x7f\xfd\xff\x6e\xf4\xff\xf5\xff\x07\x79\xfd\x75\xeb\xff\xfb\xef\xff\xd3\x0b\xfd\xd6\xff\x8f\xb9\xff\x43\x61\x26\x99\xe4\x7f\x00\x00\x00\xc8\x41\xcc\xfd\x57\x86\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\x5f\x15\x66\x22\xff\x03\x00\x00\x40\x6d\xc4\xdc\xbf\x21\xcc\x24\x93\xfc\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xdf\x4b\xfa\xff\xfa\xff\xdd\xe8\xff\xeb\xff\x0f\xf2\xfa\xf5\xff\xf5\xff\xa9\xd6\x6f\xfd\xff\x98\xfb\x37\x86\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\x6f\x0a\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\xbf\x3a\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\xff\x9a\x30\x93\x4c\xf2\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\x7f\x2f\xe9\xff\xeb\xff\x77\xa3\xff\xaf\xff\x3f\xc8\xeb\xd7\xff\xd7\xff\xa7\x5a\xbf\xf5\xff\x63\xee\xbf\x36\xcc\x24\x93\xfc\x0f\x00\x00\x00\x39\x88\xb9\xff\xba\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\xeb\xc3\x4c\xe4\x7f\x00\x00\x00\xa8\x8d\x98\xfb\x37\x87\x99\x64\x92\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\x7b\x49\xff\x5f\xff\xbf\x1b\xfd\x7f\xfd\xff\x41\x5e\xbf\xfe\xbf\xfe\x3f\xd5\xfa\xad\xff\x1f\x73\xff\x0d\x61\x26\x99\xe4\x7f\x00\x00\x00\xc8\x41\xcc\xfd\x37\x86\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\xdf\x14\x66\x22\xff\x03\x00\x00\x40\x6d\xc4\xdc\x3f\x11\x66\x92\x49\xfe\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xef\x25\xfd\x7f\xfd\xff\x6e\xf4\xff\xf5\xff\x07\x79\xfd\xfa\xff\xfa\xff\x54\xeb\xb7\xfe\x7f\xcc\xfd\x37\x87\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\xdf\x12\x66\x22\xff\x03\x00\x00\x40\x6d\xc4\xdc\x3f\x19\x66\x22\xff\x03\x00\x00\x40\x6d\xc4\xdc\x3f\x15\x66\x92\x49\xfe\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xef\x25\xfd\x7f\xfd\xff\x6e\xf4\xff\xf5\xff\x07\x79\xfd\xfa\xff\xfa\xff\x54\xeb\xb7\xfe\x7f\xcc\xfd\xd3\x61\x26\x99\xe4\x7f\x00\x00\x00\xc8\x41\xcc\xfd\x5b\xc2\x4c\xe4\x7f\x00\x00\x00\xa8\x8d\x98\xfb\xb7\x86\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\x6f\x0b\x33\xc9\x24\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xf7\x92\xfe\xbf\xfe\x7f\x37\xfa\xff\xfa\xff\x83\xbc\x7e\xfd\x7f\xfd\x7f\xaa\xf5\x5b\xff\x3f\xe6\xfe\xed\x61\x26\x99\xe4\x7f\x00\x00\x00\xc8\x41\xcc\xfd\x3b\xc2\x4c\xe4\x7f\x00\x00\x00\xa8\x8d\x98\xfb\x6f\x0d\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\xbf\x2d\xcc\x24\x93\xfc\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xdf\x4b\xfa\xff\xfa\xff\xdd\xe8\xff\xeb\xff\x0f\xf2\xfa\xf5\xff\xf5\xff\xa9\xd6\x6f\xfd\xff\x98\xfb\x77\x86\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\x7f\x38\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\xff\xf6\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\x8f\x84\x99\x64\x92\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\x7b\x49\xff\x5f\xff\xbf\x1b\xfd\x7f\xfd\xff\x41\x5e\xbf\xfe\xbf\xfe\x3f\xd5\xfa\xad\xff\x1f\x73\xff\xae\x30\x93\x4c\xf2\x3f\x00\x00\x00\xe4\x20\xe6\xfe\x3b\xc2\x4c\xe4\x7f\x00\x00\x00\xa8\x8d\x98\xfb\xef\x0c\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\xdf\x1d\x66\x92\x49\xfe\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xef\x25\xfd\x7f\xfd\xff\x6e\xf4\xff\xf5\xff\x07\x79\xfd\xfa\xff\xfa\xff\x54\xeb\xb7\xfe\x7f\xcc\xfd\x77\x85\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\x7f\x34\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\xff\x63\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\x1f\x0f\x33\xc9\x24\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xf7\x92\xfe\xbf\xfe\x7f\x37\xfa\xff\xfa\xff\x83\xbc\x7e\xfd\x7f\xfd\x7f\xaa\xf5\x5b\xff\x3f\xe6\xfe\xbb\xc3\x4c\x32\xc9\xff\x00\x00\x00\x90\x83\x98\xfb\x3f\x11\x66\x22\xff\x03\x00\x00\x40\x6d\xc4\xdc\xff\xcb\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\xf7\x84\x99\x64\x92\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\x7b\x49\xff\x5f\xff\xbf\x1b\xfd\x7f\xfd\xff\x41\x5e\xbf\xfe\xbf\xfe\x3f\xd5\xfa\xad\xff\x1f\x73\xff\xaf\x84\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\xdf\x1b\x66\x22\xff\x03\x00\x00\x40\x6d\xc4\xdc\xff\xc9\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\x5f\x0d\x33\xc9\x24\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\xf7\x92\xfe\xbf\xfe\x7f\x37\xfa\xff\xfa\xff\x83\xbc\x7e\xfd\x7f\xfd\x7f\xaa\xf5\x5b\xff\x3f\xe6\xfe\x5f\x0b\x33\xc9\x24\xff\x03\x00\x00\x40\x0e\x62\xee\xff\xf5\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\xdf\x08\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\xbf\x2f\xcc\x24\x93\xfc\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xdf\x4b\xfa\xff\xfa\xff\xdd\xe8\xff\xeb\xff\x0f\xf2\xfa\xf5\xff\xf5\xff\xa9\xd6\x6f\xfd\xff\x98\xfb\x7f\x33\xcc\x24\x93\xfc\x0f\x00\x00\x00\x39\x88\xb9\xff\xfe\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\x4f\x85\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\x7f\x3a\xcc\x24\x93\xfc\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xdf\x4b\xfa\xff\xfa\xff\xdd\xe8\xff\xeb\xff\x0f\xf2\xfa\xf5\xff\xf5\xff\xa9\xd6\x6f\xfd\xff\x98\xfb\x1f\x08\x33\xc9\x24\xff\x03\x00\x00\x40\x0e\x62\xee\xff\x4c\x98\x89\xfc\x0f\x00\x00\x00\xb5\x11\x73\xff\x6f\x85\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\xff\x76\x98\x49\x26\xf9\x5f\xff\x5f\xff\x5f\xff\x5f\xff\x5f\xff\x5f\xff\xbf\x97\xf4\xff\xf5\xff\xbb\xd1\xff\xd7\xff\x1f\xe4\xf5\xeb\xff\xeb\xff\x53\xad\xdf\xfa\xff\x31\xf7\x7f\x36\xcc\x24\x93\xfc\x0f\x00\x00\x00\x39\x88\xb9\xff\x77\xc2\x4c\xe4\x7f\x00\x00\x00\xa8\x8d\x98\xfb\x7f\x37\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\xff\xc1\x30\x93\x4c\xf2\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\x7f\x2f\xe9\xff\xeb\xff\x77\xa3\xff\xaf\xff\x3f\xc8\xeb\xd7\xff\xd7\xff\xa7\x5a\xbf\xf5\xff\x63\xee\xff\x5c\x98\x49\x26\xf9\x1f\x00\x00\x00\x72\x10\x73\xff\xef\x85\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\xef\x09\x33\x91\xff\x01\x00\x00\xa0\x36\x62\xee\x7f\x28\xcc\x24\x93\xfc\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xaf\xff\xdf\x4b\xfa\xff\xfa\xff\xdd\xe8\xff\xeb\xff\x0f\xf2\xfa\xf5\xff\xf5\xff\xa9\xd6\x6f\xfd\xff\x98\xfb\xf7\x86\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\x7f\x3e\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\x7f\x5f\x98\x89\xfc\x0f\x00\x00\x00\xb5\x11\x73\xff\xfe\x30\x93\x4c\xf2\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\x7f\x2f\xe9\xff\xeb\xff\x77\xa3\xff\xaf\xff\x3f\xc8\xeb\xd7\xff\xd7\xff\xa7\x5a\xbf\xf5\xff\x63\xee\x9f\x09\x33\xc9\x24\xff\x03\x00\x00\x40\x0e\x62\xee\x3f\x10\x66\x22\xff\x03\x00\x00\x40\x6d\xc4\xdc\x7f\x30\xcc\x44\xfe\x07\x00\x00\x80\xda\x88\xb9\xff\xe1\x30\x93\x4c\xf2\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\xbf\xfe\x7f\x2f\xe9\xff\xeb\xff\x77\xa3\xff\xaf\xff\x3f\xc8\xeb\xd7\xff\xd7\xff\xa7\x5a\xbf\xf5\xff\x63\xee\x3f\x14\x66\x92\x49\xfe\x07\x00\x00\x80\x1c\xc4\xdc\xff\x85\x30\x13\xf9\x1f\x00\x00\x00\x6a\x23\xe6\xfe\x2f\x86\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\x1f\x0e\x33\xc9\x24\xff\xeb\xff\xeb\xff\xeb\xff\xeb\xff\x0f\x74\xff\xff\xdf\xc3\x95\xfa\xff\x7d\x4b\xff\x5f\xff\xbf\x1b\xfd\x7f\xfd\xff\x41\x5e\xbf\xfe\xbf\xfe\x3f\xd5\xfa\xad\xff\x1f\x73\xff\x91\x30\x93\x4c\xf2\x3f\x00\x00\x00\xe4\x20\xe6\xfe\xa3\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\xc7\xc2\x4c\xe4\x7f\x00\x00\x00\xa8\x8d\x98\xfb\x8f\x87\x99\x64\x92\xff\xf5\xff\xf5\xff\xf5\xff\xf5\xff\x07\xba\xff\xef\xbf\xff\xdf\xf7\xfa\xb1\xff\xff\xcf\x6f\xe3\x7e\xf4\xff\x9b\xf4\xff\xdb\xe9\xff\xeb\xff\xeb\xff\xeb\xff\xd3\x5d\xbf\xf5\xff\x63\xee\xff\xfd\x30\x93\x4c\xf2\x3f\x00\x00\x00\xe4\x20\xe6\xfe\x13\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\xb3\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\x73\x61\x26\x99\xe4\x7f\xfd\x7f\xfd\x7f\xfd\x7f\xfd\x7f\xfd\x7f\xfd\xff\x5e\xea\xc7\xfe\xff\xdb\xa1\xff\xdf\xa4\xff\xdf\x4e\xff\x5f\xff\x5f\xff\x5f\xff\x9f\xee\xfa\xad\xff\x1f\x73\xff\x7c\x98\x49\x26\xf9\x1f\x00\x00\x00\x72\x10\x73\xff\x23\x61\x26\xf2\x3f\x00\x00\x00\xd4\x46\xcc\xfd\x8f\x86\x99\xc8\xff\x00\x00\x00\x50\x1b\x31\xf7\x3f\x16\x66\x92\x49\xfe\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xd7\xff\xef\x25\xfd\x7f\xfd\xff\x6e\xf4\xff\xf5\xff\x07\x79\xfd\xfa\xff\xfa\xff\x54\xeb\xb7\xfe\x7f\xcc\xfd\x8f\x87\x99\x64\x92\xff\x01\x00\x00\x20\x07\x31\xf7\x3f\x11\x66\x22\xff\x03\xff\xcf\xde\x5d\xf3\x6a\x92\xed\x60\x18\xbd\x49\xff\xea\xcb\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\x34\x4c\xc1\x68\x24\xdb\xd9\x54\x49\x2d\x95\x7a\x6f\x7b\xad\xc4\xd1\x77\xb4\x93\x13\xbc\xc1\xa3\x02\x00\x00\xda\xc8\xdd\xff\xc8\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\x3f\x2a\x6e\x19\xb2\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xbf\x92\xfe\x5f\xff\x7f\x44\xff\xaf\xff\xdf\xf9\xfd\xfa\x7f\xfd\x3f\xe7\x56\xeb\xff\x73\xf7\x3f\x3a\x6e\x19\xb2\xff\x01\x00\x00\x60\x82\xdc\xfd\x8f\x89\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x63\xe3\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xb8\xb8\x65\xc8\xfe\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xff\x4a\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\xff\xf8\xb8\x65\xc8\xfe\x07\x00\x00\x80\x09\x72\xf7\x3f\x21\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\x4f\x8c\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x93\xe2\x96\x21\xfb\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\xff\x2b\xe9\xff\xf5\xff\x47\xf4\xff\xfa\xff\x9d\xdf\xaf\xff\xd7\xff\x73\x6e\xb5\xfe\x3f\x77\xff\x93\xe3\x96\x21\xfb\x1f\x00\x00\x00\x26\xc8\xdd\xff\x94\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\x3f\x35\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\x4f\x8b\x5b\x86\xec\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xaf\xa4\xff\xd7\xff\x1f\xd1\xff\xeb\xff\x77\x7e\xbf\xfe\x5f\xff\xcf\xb9\xd5\xfa\xff\xdc\xfd\x4f\x8f\x5b\x86\xec\x7f\x00\x00\x00\x98\x20\x77\xff\x33\xe2\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xcc\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\x3f\x2b\x6e\x19\xb2\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xbf\x92\xfe\x5f\xff\x7f\x44\xff\xaf\xff\xdf\xf9\xfd\xfa\x7f\xfd\x3f\xe7\x56\xeb\xff\x73\xf7\x3f\x3b\x6e\x19\xb2\xff\x01\x00\x00\x60\x82\xdc\xfd\xcf\x89\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x73\xe3\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xbc\xb8\x65\xc8\xfe\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xff\x4a\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\xff\xfc\xb8\x65\xc8\xfe\x07\x00\x00\x80\x09\x72\xf7\xbf\x20\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\x2f\x8c\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x8b\xe2\x96\x21\xfb\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\xff\x2b\xe9\xff\xf5\xff\x47\xf4\xff\xfa\xff\x9d\xdf\xaf\xff\xd7\xff\x73\x6e\xb5\xfe\x3f\x77\xff\x8b\xe3\x96\x21\xfb\x1f\x00\x00\x00\x26\xc8\xdd\xff\x92\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\xbf\x34\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\x2f\x8b\x5b\x86\xec\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xaf\xa4\xff\xd7\xff\x1f\xd9\xba\xff\xcf\x7f\x7e\xfd\xbf\xfe\x5f\xff\xaf\xff\xe7\x61\xad\xd6\xff\xe7\xee\x7f\x79\xdc\x32\x64\xff\x03\x00\x00\xc0\x04\xb9\xfb\x5f\x11\xb7\xd8\xff\x00\x00\x00\xd0\x46\xee\xfe\x57\xc6\x2d\xf6\x3f\x00\x00\x00\xb4\x91\xbb\xff\x55\x71\xcb\x90\xfd\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\xff\x5b\xdb\xff\x3f\xf4\x17\xf5\xff\x37\x4f\xff\xaf\xff\x7f\x84\xef\xff\xdf\xb4\x5b\xdd\xcf\xef\xfe\x7e\xfd\xbf\xfe\x9f\x73\xab\xf5\xff\xb9\xfb\x5f\x1d\xb7\x0c\xd9\xff\x00\x00\x00\x30\x41\xee\xfe\xd7\xc4\x2d\xf6\x3f\x00\x00\x00\xb4\x91\xbb\xff\xb5\x71\x8b\xfd\x0f\x00\x00\x00\x6d\xe4\xee\x7f\x5d\xdc\x32\x64\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xdf\xf7\xff\xaf\xa4\xff\xd7\xff\x1f\xd1\xff\xeb\xff\x77\x7e\xbf\xfe\x5f\xff\xcf\xb9\xd5\xfa\xff\xdc\xfd\xaf\x8f\x5b\x86\xec\x7f\x00\x00\x00\x98\x20\x77\xff\x1b\xe2\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xc6\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\xbf\x29\x6e\x19\xb2\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xbf\x92\xfe\x5f\xff\x7f\x44\xff\xaf\xff\xdf\xf9\xfd\xfa\x7f\xfd\x3f\xe7\x56\xeb\xff\x73\xf7\xbf\x39\x6e\x19\xb2\xff\x01\x00\x00\x60\x82\xdc\xfd\x6f\x89\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x5b\xe3\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xb6\xb8\x65\xc8\xfe\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xff\x4a\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\xff\xf6\xb8\x65\xc8\xfe\x07\x00\x00\x80\x09\x72\xf7\xbf\x23\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\xef\x8c\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\xbb\xe2\x96\x21\xfb\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\xff\x2b\xe9\xff\xf5\xff\x47\xf4\xff\xfa\xff\x9d\xdf\xaf\xff\xd7\xff\x73\x6e\xb5\xfe\x3f\x77\xff\xbb\xe3\x96\x21\xfb\x1f\x00\x00\x00\x26\xc8\xdd\xff\x9e\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\xbf\x37\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\xef\x8b\x5b\x86\xec\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xaf\xa4\xff\xd7\xff\x1f\xd1\xff\xeb\xff\x77\x7e\xbf\xfe\x5f\xff\xcf\xb9\xd5\xfa\xff\xdc\xfd\xef\x8f\x5b\x86\xec\x7f\x00\x00\x00\x98\x20\x77\xff\x07\xe2\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xc1\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\x7f\x28\x6e\x19\xb2\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xbf\x92\xfe\x5f\xff\x7f\x44\xff\xaf\xff\xdf\xf9\xfd\xfa\x7f\xfd\x3f\xe7\x56\xeb\xff\x73\xf7\x7f\x38\x6e\x19\xb2\xff\x01\x00\x00\x60\x82\xdc\xfd\x1f\x89\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x47\xe3\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xb1\xb8\x65\xc8\xfe\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xff\x4a\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\xff\xf1\xb8\x65\xc8\xfe\x07\x00\x00\x80\x09\x72\xf7\x7f\x22\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\x9f\x8c\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\xa7\xe2\x96\x21\xfb\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\xff\x2b\xe9\xff\xf5\xff\x47\xf4\xff\xfa\xff\x9d\xdf\xaf\xff\xd7\xff\x73\x6e\xb5\xfe\x3f\x77\xff\xa7\xe3\x96\x21\xfb\x1f\x00\x00\x00\x26\xc8\xdd\xff\x99\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\x7f\x36\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\x9f\x8b\x5b\x86\xec\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xaf\xa4\xff\xd7\xff\x1f\xd1\xff\xeb\xff\x77\x7e\xbf\xfe\x5f\xff\xcf\xb9\xd5\xfa\xff\xdc\xfd\x9f\x8f\x5b\x86\xec\x7f\x00\x00\x00\x98\x20\x77\xff\x17\xe2\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xc5\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\x7f\x29\x6e\x19\xb2\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xbf\x92\xfe\x5f\xff\x7f\x44\xff\xaf\xff\xdf\xf9\xfd\xfa\x7f\xfd\x3f\xe7\x56\xeb\xff\x73\xf7\x7f\x39\x6e\x19\xb2\xff\x01\x00\x00\x60\x82\xdc\xfd\x5f\x89\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x57\xe3\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xb5\xb8\x65\xc8\xfe\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xff\x4a\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\xff\xf5\xb8\x65\xc8\xfe\x07\x00\x00\x80\x09\x72\xf7\x7f\x23\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\xdf\x8c\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\xb7\xe2\x96\x21\xfb\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\xff\x2b\xe9\xff\xf5\xff\x47\xf4\xff\xfa\xff\x9d\xdf\xaf\xff\xd7\xff\x73\x6e\xb5\xfe\x3f\x77\xff\xb7\xe3\x96\x21\xfb\x1f\x00\x00\x00\x26\xc8\xdd\xff\x9d\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\x7f\x37\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\xdf\x8b\x5b\x86\xec\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xaf\xa4\xff\xd7\xff\x1f\xd1\xff\xeb\xff\x77\x7e\xbf\xfe\x5f\xff\xcf\xb9\xd5\xfa\xff\xdc\xfd\xdf\x8f\x5b\x86\xec\x7f\x00\x00\x00\x98\x20\x77\xff\x0f\xe2\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xc3\xb8\xc5\xfe\x07\x00\x00\x80\x36\x72\xf7\xff\x28\x6e\x19\xb2\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xbf\x92\xfe\x5f\xff\x7f\x44\xff\xaf\xff\xdf\xf9\xfd\xfa\x7f\xfd\x3f\xe7\x56\xeb\xff\x73\xf7\xff\x38\x6e\x19\xb2\xff\x01\x00\x00\x60\x82\xdc\xfd\x3f\x89\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x4f\xe3\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\xff\xb3\xb8\x65\xc8\xfe\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xff\x4a\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\xff\xf3\xb8\x65\xc8\xfe\x07\x00\x00\x80\x09\x72\xf7\xff\x22\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\xbf\x8c\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\xaf\xe2\x96\x21\xfb\x5f\xff\xaf\xff\xdf\xa7\xff\xbf\x51\xbf\xd1\xff\xeb\xff\xf5\xff\xfb\xd0\xff\xeb\xff\x8f\xe8\xff\xf5\xff\x3b\xbf\x5f\xff\xaf\xff\xe7\xdc\x6a\xfd\x7f\xee\xfe\x5f\xc7\x2d\x43\xf6\x3f\x00\x00\x00\x4c\x90\xbb\xff\x37\x71\x8b\xfd\x0f\x00\x00\x00\x6d\xe4\xee\xff\x6d\xdc\x62\xff\x03\x00\x00\x40\x1b\xb9\xfb\x7f\x17\xb7\x0c\xd9\xff\xfa\x7f\xfd\xff\x3e\xfd\xbf\xef\xff\x27\xfd\xbf\xfe\x7f\x27\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\xff\xfb\xb8\x65\xc8\xfe\x07\x00\x00\x80\x09\x72\xf7\xff\x21\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\x7f\x8c\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\x9f\xe2\x96\x21\xfb\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\xff\x2b\xe9\xff\xf5\xff\x47\xf4\xff\xfa\xff\x9d\xdf\xaf\xff\xd7\xff\x73\x6e\xb5\xfe\x3f\x77\xff\x9f\xe3\x96\x21\xfb\x1f\x00\x00\x00\xf6\x72\xe3\xa6\x7e\x95\xbb\xff\x2f\x71\x8b\xfd\x0f\x00\x00\x00\x6d\xe4\xee\xff\x6b\xdc\x62\xff\x03\x00\x00\x40\x1b\xb9\xfb\xff\x16\xb7\x0c\xd9\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xd7\xff\x5f\x49\xff\xaf\xff\x3f\xa2\xff\xd7\xff\xef\xfc\x7e\xfd\xbf\xfe\x9f\x73\xab\xf5\xff\xb9\xfb\xff\x1e\xb7\x0c\xd9\xff\x00\x00\x00\x30\x41\xee\xfe\x7f\xc4\x2d\xf6\x3f\x00\x00\x00\xb4\x91\xbb\xff\x9f\x71\x8b\xfd\x0f\x00\x00\x00\x6d\xe4\xee\xff\x57\xdc\x32\x64\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\x7f\x25\xfd\xbf\xfe\xff\x88\xfe\x5f\xff\xbf\xf3\xfb\xf5\xff\xfa\x7f\xce\xad\xd6\xff\xe7\xee\xff\x77\xdc\x32\x64\xff\x03\x00\x00\xc0\x04\xb9\xfb\xff\x13\xb7\xd8\xff\x00\x00\x00\xd0\x46\xee\xfe\xff\xc6\x2d\xf6\x3f\x00\x00\x00\xb4\x91\xbb\xff\x7f\x71\xcb\x90\xfd\xaf\xff\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xff\x95\xf4\xff\xfa\xff\x23\xfa\x7f\xfd\xff\xce\xef\xd7\xff\xeb\xff\x39\xb7\x5a\xff\x9f\xbb\xff\xff\x71\xcb\x90\xfd\x0f\x00\x00\x00\x13\xe4\xee\xbf\x2d\x6e\xb1\xff\x01\x00\x00\xa0\x8d\xdc\xfd\xb7\xc7\x2d\xf6\x3f\x00\x00\x00\xb4\x91\xbb\xff\x8e\xb8\x65\xc8\xfe\xd7\xff\xeb\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\xff\x4a\xfa\x7f\xfd\xff\x11\xfd\xbf\xfe\x7f\xe7\xf7\xeb\xff\xf5\xff\x9c\x5b\xad\xff\xcf\xdd\x7f\x67\xdc\x32\x64\xff\x03\x00\x00\xc0\x04\xb9\xfb\xef\x8a\x5b\xec\x7f\x00\x00\x00\x68\x23\x77\xff\xdd\x71\x8b\xfd\x0f\x00\x00\x00\x6d\xe4\xee\xbf\x27\x6e\x19\xb2\xff\xf5\xff\xfa\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xbf\x92\xfe\x5f\xff\x7f\x44\xff\xaf\xff\xdf\xf9\xfd\xfa\x7f\xfd\x3f\xe7\x56\xeb\xff\x73\xf7\xdf\x1b\xb7\x0c\xd9\xff\x00\x00\x00\x30\x41\xee\xfe\xfb\xe2\x16\xfb\x1f\x00\x00\x00\xda\xc8\xdd\x7f\x7f\xdc\x62\xff\x03\x00\x00\x40\x1b\xb9\xfb\x1f\x88\x5b\x86\xec\x7f\xfd\xbf\xfe\x5f\xff\xaf\xff\xd7\xff\xeb\xff\xaf\xa4\xff\xd7\xff\x1f\xd1\xff\xeb\xff\x77\x7e\xbf\xfe\x5f\xff\xcf\xb9\xd5\xfa\xff\xdc\xfd\x0f\x06\x00\x00\xff\xff\x33\xfa\x3e\x42", 23867);
syz_mount_image(/*fs=*/0x200000000140, /*dir=*/0x200000005d40, /*flags=*/0, /*opts=*/0x200000000000, /*chdir=*/1, /*size=*/0x5d3b, /*img=*/0x20000000bac0);
		break;
	case 1:
*(uint64_t*)0x200000000f00 = 0x1080000;
*(uint64_t*)0x200000000f08 = 0;
*(uint64_t*)0x200000000f10 = 0;
*(uint64_t*)0x200000000f18 = 0;
*(uint32_t*)0x200000000f20 = 0x14;
*(uint64_t*)0x200000000f28 = 0;
*(uint64_t*)0x200000000f30 = 0;
*(uint64_t*)0x200000000f38 = 0;
*(uint64_t*)0x200000000f40 = 0;
*(uint64_t*)0x200000000f48 = 0;
*(uint32_t*)0x200000000f50 = -1;
syz_clone3(/*args=*/0x200000000f00, /*size=*/0x58);
		break;
	}

}
int main(void)
{
		syscall(__NR_mmap, /*addr=*/0x1ffffffff000ul, /*len=*/0x1000ul, /*prot=*/0ul, /*flags=MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE*/0x32ul, /*fd=*/(intptr_t)-1, /*offset=*/0ul);
	syscall(__NR_mmap, /*addr=*/0x200000000000ul, /*len=*/0x1000000ul, /*prot=PROT_WRITE|PROT_READ|PROT_EXEC*/7ul, /*flags=MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE*/0x32ul, /*fd=*/(intptr_t)-1, /*offset=*/0ul);
	syscall(__NR_mmap, /*addr=*/0x200001000000ul, /*len=*/0x1000ul, /*prot=*/0ul, /*flags=MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE*/0x32ul, /*fd=*/(intptr_t)-1, /*offset=*/0ul);
	const char* reason;
	(void)reason;
	for (procid = 0; procid < 8; procid++) {
		if (fork() == 0) {
			use_temporary_dir();
			do_sandbox_none();
		}
	}
	sleep(1000000);
	return 0;
}
