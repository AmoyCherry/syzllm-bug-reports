Oops: general protection fault, probably for non-canonical address 0xdffffc0000000008: 0000 [#1] SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000040-0x0000000000000047]
CPU: 1 UID: 0 PID: 29345 Comm: syz.5.1848 Not tainted 6.16.0-rc3 #1 PREEMPT(full) 
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014
RIP: 0010:hfs_find_init+0x74/0x240 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/hfs/bfind.c:21
Code: c1 ea 03 80 3c 02 00 0f 85 c1 01 00 00 4c 8d 6b 40 48 c7 45 18 00 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 ea 48 c1 ea 03 <0f> b6 04 02 84 c0 74 08 3c 03 0f 8e 69 01 00 00 8b 43 40 be c0 0c
RSP: 0018:ffffc90004b8f580 EFLAGS: 00010202
RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000080000
RDX: 0000000000000008 RSI: ffff8880205c1cc0 RDI: ffffc90004b8f608
RBP: ffffc90004b8f5f0 R08: fffffbfff210890b R09: fffffbfff210890b
R10: ffffc90004b8f688 R11: ffffffff90844857 R12: 0000000000000004
R13: 0000000000000040 R14: ffff888077c8ba80 R15: ffff888077c8bbca
FS:  00007ffb55f206c0(0000) GS:ffff8880eb2fa000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fe562d84338 CR3: 000000005ced6000 CR4: 0000000000002ef0
Call Trace:
 <TASK>
 hfs_ext_read_extent+0x197/0xa50 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/hfs/extent.c:200
 hfs_get_block+0x593/0x870 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/hfs/extent.c:366
 block_read_full_folio+0x3c2/0xb30 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/buffer.c:2427
 filemap_read_folio+0xbf/0x2b0 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/mm/filemap.c:2412
 do_read_cache_folio+0x125/0x5b0 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/mm/filemap.c:3894
 do_read_cache_page+0x30/0x120 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/mm/filemap.c:3960
 read_mapping_page home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/include/linux/pagemap.h:966 [inline]
 hfs_btree_open+0x4c2/0x1750 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/hfs/btree.c:78
 hfs_mdb_get+0x15e8/0x2080 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/hfs/mdb.c:199
 hfs_fill_super+0x380/0x710 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/hfs/super.c:337
 get_tree_bdev_flags+0x39f/0x630 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/super.c:1681
 vfs_get_tree+0x8e/0x340 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/super.c:1804
 do_new_mount home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/namespace.c:3885 [inline]
 path_mount+0x11aa/0x1c90 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/namespace.c:4209
 do_mount+0xb3/0x110 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/namespace.c:4222
 __do_sys_mount home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/namespace.c:4433 [inline]
 __se_sys_mount home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/namespace.c:4410 [inline]
 __x64_sys_mount+0x1dd/0x220 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/namespace.c:4410
 do_syscall_x64 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/arch/x86/entry/syscall_64.c:63 [inline]
 do_syscall_64+0xcf/0x490 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/arch/x86/entry/syscall_64.c:94
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7ffb551902da
Code: 48 c7 c2 a8 ff ff ff f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb 93 e8 d6 1a 00 00 66 0f 1f 44 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffb55f1fe68 EFLAGS: 00000246 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 00007ffb55f1fef0 RCX: 00007ffb551902da
RDX: 0000200000000240 RSI: 0000200000000280 RDI: 00007ffb55f1feb0
RBP: 0000200000000240 R08: 00007ffb55f1fef0 R09: 0000000000000048
R10: 0000000000000048 R11: 0000000000000246 R12: 0000200000000280
R13: 00007ffb55f1feb0 R14: 0000000000000256 R15: 00002000000002c0
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:hfs_find_init+0x74/0x240 home/parallels/github/syzkaller-docker/syzkaller-docker/syzkaller-data/work/linux-6.16-rc3/fs/hfs/bfind.c:21
Code: c1 ea 03 80 3c 02 00 0f 85 c1 01 00 00 4c 8d 6b 40 48 c7 45 18 00 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 ea 48 c1 ea 03 <0f> b6 04 02 84 c0 74 08 3c 03 0f 8e 69 01 00 00 8b 43 40 be c0 0c
RSP: 0018:ffffc90004b8f580 EFLAGS: 00010202
RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000080000
RDX: 0000000000000008 RSI: ffff8880205c1cc0 RDI: ffffc90004b8f608
RBP: ffffc90004b8f5f0 R08: fffffbfff210890b R09: fffffbfff210890b
R10: ffffc90004b8f688 R11: ffffffff90844857 R12: 0000000000000004
R13: 0000000000000040 R14: ffff888077c8ba80 R15: ffff888077c8bbca
FS:  00007ffb55f206c0(0000) GS:ffff888097afa000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f51ff7def98 CR3: 000000005ced6000 CR4: 0000000000002ef0
----------------
Code disassembly (best guess):
   0:	c1 ea 03             	shr    $0x3,%edx
   3:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
   7:	0f 85 c1 01 00 00    	jne    0x1ce
   d:	4c 8d 6b 40          	lea    0x40(%rbx),%r13
  11:	48 c7 45 18 00 00 00 	movq   $0x0,0x18(%rbp)
  18:	00
  19:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  20:	fc ff df
  23:	4c 89 ea             	mov    %r13,%rdx
  26:	48 c1 ea 03          	shr    $0x3,%rdx
* 2a:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax <-- trapping instruction
  2e:	84 c0                	test   %al,%al
  30:	74 08                	je     0x3a
  32:	3c 03                	cmp    $0x3,%al
  34:	0f 8e 69 01 00 00    	jle    0x1a3
  3a:	8b 43 40             	mov    0x40(%rbx),%eax
  3d:	be                   	.byte 0xbe
  3e:	c0                   	.byte 0xc0
  3f:	0c                   	.byte 0xc
